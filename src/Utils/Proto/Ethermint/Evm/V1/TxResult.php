<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ethermint/evm/v1/evm.proto

namespace Ethermint\Evm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TxResult stores results of Tx execution.
 *
 * Generated from protobuf message <code>ethermint.evm.v1.TxResult</code>
 */
class TxResult extends \Google\Protobuf\Internal\Message
{
    /**
     * contract_address contains the ethereum address of the created contract (if
     * any). If the state transition is an evm.Call, the contract address will be
     * empty.
     *
     * Generated from protobuf field <code>string contract_address = 1 [json_name = "contractAddress", (.gogoproto.moretags) = "yaml:\"contract_address\""];</code>
     */
    protected $contract_address = '';
    /**
     * bloom represents the bloom filter bytes
     *
     * Generated from protobuf field <code>bytes bloom = 2 [json_name = "bloom"];</code>
     */
    protected $bloom = '';
    /**
     * tx_logs contains the transaction hash and the proto-compatible ethereum
     * logs.
     *
     * Generated from protobuf field <code>.ethermint.evm.v1.TransactionLogs tx_logs = 3 [json_name = "txLogs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"tx_logs\""];</code>
     */
    protected $tx_logs = null;
    /**
     * ret defines the bytes from the execution.
     *
     * Generated from protobuf field <code>bytes ret = 4 [json_name = "ret"];</code>
     */
    protected $ret = '';
    /**
     * reverted flag is set to true when the call has been reverted
     *
     * Generated from protobuf field <code>bool reverted = 5 [json_name = "reverted"];</code>
     */
    protected $reverted = false;
    /**
     * gas_used notes the amount of gas consumed while execution
     *
     * Generated from protobuf field <code>uint64 gas_used = 6 [json_name = "gasUsed"];</code>
     */
    protected $gas_used = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $contract_address
     *           contract_address contains the ethereum address of the created contract (if
     *           any). If the state transition is an evm.Call, the contract address will be
     *           empty.
     *     @type string $bloom
     *           bloom represents the bloom filter bytes
     *     @type \Ethermint\Evm\V1\TransactionLogs $tx_logs
     *           tx_logs contains the transaction hash and the proto-compatible ethereum
     *           logs.
     *     @type string $ret
     *           ret defines the bytes from the execution.
     *     @type bool $reverted
     *           reverted flag is set to true when the call has been reverted
     *     @type int|string $gas_used
     *           gas_used notes the amount of gas consumed while execution
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ethermint\Evm\V1\Evm::initOnce();
        parent::__construct($data);
    }

    /**
     * contract_address contains the ethereum address of the created contract (if
     * any). If the state transition is an evm.Call, the contract address will be
     * empty.
     *
     * Generated from protobuf field <code>string contract_address = 1 [json_name = "contractAddress", (.gogoproto.moretags) = "yaml:\"contract_address\""];</code>
     * @return string
     */
    public function getContractAddress()
    {
        return $this->contract_address;
    }

    /**
     * contract_address contains the ethereum address of the created contract (if
     * any). If the state transition is an evm.Call, the contract address will be
     * empty.
     *
     * Generated from protobuf field <code>string contract_address = 1 [json_name = "contractAddress", (.gogoproto.moretags) = "yaml:\"contract_address\""];</code>
     * @param string $var
     * @return $this
     */
    public function setContractAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->contract_address = $var;

        return $this;
    }

    /**
     * bloom represents the bloom filter bytes
     *
     * Generated from protobuf field <code>bytes bloom = 2 [json_name = "bloom"];</code>
     * @return string
     */
    public function getBloom()
    {
        return $this->bloom;
    }

    /**
     * bloom represents the bloom filter bytes
     *
     * Generated from protobuf field <code>bytes bloom = 2 [json_name = "bloom"];</code>
     * @param string $var
     * @return $this
     */
    public function setBloom($var)
    {
        GPBUtil::checkString($var, False);
        $this->bloom = $var;

        return $this;
    }

    /**
     * tx_logs contains the transaction hash and the proto-compatible ethereum
     * logs.
     *
     * Generated from protobuf field <code>.ethermint.evm.v1.TransactionLogs tx_logs = 3 [json_name = "txLogs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"tx_logs\""];</code>
     * @return \Ethermint\Evm\V1\TransactionLogs|null
     */
    public function getTxLogs()
    {
        return $this->tx_logs;
    }

    public function hasTxLogs()
    {
        return isset($this->tx_logs);
    }

    public function clearTxLogs()
    {
        unset($this->tx_logs);
    }

    /**
     * tx_logs contains the transaction hash and the proto-compatible ethereum
     * logs.
     *
     * Generated from protobuf field <code>.ethermint.evm.v1.TransactionLogs tx_logs = 3 [json_name = "txLogs", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"tx_logs\""];</code>
     * @param \Ethermint\Evm\V1\TransactionLogs $var
     * @return $this
     */
    public function setTxLogs($var)
    {
        GPBUtil::checkMessage($var, \Ethermint\Evm\V1\TransactionLogs::class);
        $this->tx_logs = $var;

        return $this;
    }

    /**
     * ret defines the bytes from the execution.
     *
     * Generated from protobuf field <code>bytes ret = 4 [json_name = "ret"];</code>
     * @return string
     */
    public function getRet()
    {
        return $this->ret;
    }

    /**
     * ret defines the bytes from the execution.
     *
     * Generated from protobuf field <code>bytes ret = 4 [json_name = "ret"];</code>
     * @param string $var
     * @return $this
     */
    public function setRet($var)
    {
        GPBUtil::checkString($var, False);
        $this->ret = $var;

        return $this;
    }

    /**
     * reverted flag is set to true when the call has been reverted
     *
     * Generated from protobuf field <code>bool reverted = 5 [json_name = "reverted"];</code>
     * @return bool
     */
    public function getReverted()
    {
        return $this->reverted;
    }

    /**
     * reverted flag is set to true when the call has been reverted
     *
     * Generated from protobuf field <code>bool reverted = 5 [json_name = "reverted"];</code>
     * @param bool $var
     * @return $this
     */
    public function setReverted($var)
    {
        GPBUtil::checkBool($var);
        $this->reverted = $var;

        return $this;
    }

    /**
     * gas_used notes the amount of gas consumed while execution
     *
     * Generated from protobuf field <code>uint64 gas_used = 6 [json_name = "gasUsed"];</code>
     * @return int|string
     */
    public function getGasUsed()
    {
        return $this->gas_used;
    }

    /**
     * gas_used notes the amount of gas consumed while execution
     *
     * Generated from protobuf field <code>uint64 gas_used = 6 [json_name = "gasUsed"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasUsed($var)
    {
        GPBUtil::checkUint64($var);
        $this->gas_used = $var;

        return $this;
    }

}

