<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ethermint/evm/v1/query.proto

namespace Ethermint\Evm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * QueryTraceBlockRequest defines TraceTx request
 *
 * Generated from protobuf message <code>ethermint.evm.v1.QueryTraceBlockRequest</code>
 */
class QueryTraceBlockRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * txs messages in the block
     *
     * Generated from protobuf field <code>repeated .ethermint.evm.v1.MsgEthereumTx txs = 1 [json_name = "txs"];</code>
     */
    private $txs;
    /**
     * TraceConfig holds extra parameters to trace functions.
     *
     * Generated from protobuf field <code>.ethermint.evm.v1.TraceConfig trace_config = 3 [json_name = "traceConfig"];</code>
     */
    protected $trace_config = null;
    /**
     * block number
     *
     * Generated from protobuf field <code>int64 block_number = 5 [json_name = "blockNumber"];</code>
     */
    protected $block_number = 0;
    /**
     * block hex hash
     *
     * Generated from protobuf field <code>string block_hash = 6 [json_name = "blockHash"];</code>
     */
    protected $block_hash = '';
    /**
     * block time
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp block_time = 7 [json_name = "blockTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $block_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ethermint\Evm\V1\MsgEthereumTx[]|\Google\Protobuf\Internal\RepeatedField $txs
     *           txs messages in the block
     *     @type \Ethermint\Evm\V1\TraceConfig $trace_config
     *           TraceConfig holds extra parameters to trace functions.
     *     @type int|string $block_number
     *           block number
     *     @type string $block_hash
     *           block hex hash
     *     @type \Google\Protobuf\Timestamp $block_time
     *           block time
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ethermint\Evm\V1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * txs messages in the block
     *
     * Generated from protobuf field <code>repeated .ethermint.evm.v1.MsgEthereumTx txs = 1 [json_name = "txs"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTxs()
    {
        return $this->txs;
    }

    /**
     * txs messages in the block
     *
     * Generated from protobuf field <code>repeated .ethermint.evm.v1.MsgEthereumTx txs = 1 [json_name = "txs"];</code>
     * @param \Ethermint\Evm\V1\MsgEthereumTx[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTxs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Ethermint\Evm\V1\MsgEthereumTx::class);
        $this->txs = $arr;

        return $this;
    }

    /**
     * TraceConfig holds extra parameters to trace functions.
     *
     * Generated from protobuf field <code>.ethermint.evm.v1.TraceConfig trace_config = 3 [json_name = "traceConfig"];</code>
     * @return \Ethermint\Evm\V1\TraceConfig|null
     */
    public function getTraceConfig()
    {
        return $this->trace_config;
    }

    public function hasTraceConfig()
    {
        return isset($this->trace_config);
    }

    public function clearTraceConfig()
    {
        unset($this->trace_config);
    }

    /**
     * TraceConfig holds extra parameters to trace functions.
     *
     * Generated from protobuf field <code>.ethermint.evm.v1.TraceConfig trace_config = 3 [json_name = "traceConfig"];</code>
     * @param \Ethermint\Evm\V1\TraceConfig $var
     * @return $this
     */
    public function setTraceConfig($var)
    {
        GPBUtil::checkMessage($var, \Ethermint\Evm\V1\TraceConfig::class);
        $this->trace_config = $var;

        return $this;
    }

    /**
     * block number
     *
     * Generated from protobuf field <code>int64 block_number = 5 [json_name = "blockNumber"];</code>
     * @return int|string
     */
    public function getBlockNumber()
    {
        return $this->block_number;
    }

    /**
     * block number
     *
     * Generated from protobuf field <code>int64 block_number = 5 [json_name = "blockNumber"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setBlockNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->block_number = $var;

        return $this;
    }

    /**
     * block hex hash
     *
     * Generated from protobuf field <code>string block_hash = 6 [json_name = "blockHash"];</code>
     * @return string
     */
    public function getBlockHash()
    {
        return $this->block_hash;
    }

    /**
     * block hex hash
     *
     * Generated from protobuf field <code>string block_hash = 6 [json_name = "blockHash"];</code>
     * @param string $var
     * @return $this
     */
    public function setBlockHash($var)
    {
        GPBUtil::checkString($var, True);
        $this->block_hash = $var;

        return $this;
    }

    /**
     * block time
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp block_time = 7 [json_name = "blockTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getBlockTime()
    {
        return $this->block_time;
    }

    public function hasBlockTime()
    {
        return isset($this->block_time);
    }

    public function clearBlockTime()
    {
        unset($this->block_time);
    }

    /**
     * block time
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp block_time = 7 [json_name = "blockTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setBlockTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->block_time = $var;

        return $this;
    }

}

