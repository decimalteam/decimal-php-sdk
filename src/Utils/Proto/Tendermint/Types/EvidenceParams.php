<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tendermint/types/params.proto

namespace Tendermint\Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * EvidenceParams determine how we handle evidence of malfeasance.
 *
 * Generated from protobuf message <code>tendermint.types.EvidenceParams</code>
 */
class EvidenceParams extends \Google\Protobuf\Internal\Message
{
    /**
     * Max age of evidence, in blocks.
     * The basic formula for calculating this is: MaxAgeDuration / {average block
     * time}.
     *
     * Generated from protobuf field <code>int64 max_age_num_blocks = 1 [json_name = "maxAgeNumBlocks"];</code>
     */
    protected $max_age_num_blocks = 0;
    /**
     * Max age of evidence, in time.
     * It should correspond with an app's "unbonding period" or other similar
     * mechanism for handling [Nothing-At-Stake
     * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_age_duration = 2 [json_name = "maxAgeDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $max_age_duration = null;
    /**
     * This sets the maximum size of total evidence in bytes that can be committed in a single block.
     * and should fall comfortably under the max block bytes.
     * Default is 1048576 or 1MB
     *
     * Generated from protobuf field <code>int64 max_bytes = 3 [json_name = "maxBytes"];</code>
     */
    protected $max_bytes = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $max_age_num_blocks
     *           Max age of evidence, in blocks.
     *           The basic formula for calculating this is: MaxAgeDuration / {average block
     *           time}.
     *     @type \Google\Protobuf\Duration $max_age_duration
     *           Max age of evidence, in time.
     *           It should correspond with an app's "unbonding period" or other similar
     *           mechanism for handling [Nothing-At-Stake
     *           attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
     *     @type int|string $max_bytes
     *           This sets the maximum size of total evidence in bytes that can be committed in a single block.
     *           and should fall comfortably under the max block bytes.
     *           Default is 1048576 or 1MB
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Tendermint\Types\Params::initOnce();
        parent::__construct($data);
    }

    /**
     * Max age of evidence, in blocks.
     * The basic formula for calculating this is: MaxAgeDuration / {average block
     * time}.
     *
     * Generated from protobuf field <code>int64 max_age_num_blocks = 1 [json_name = "maxAgeNumBlocks"];</code>
     * @return int|string
     */
    public function getMaxAgeNumBlocks()
    {
        return $this->max_age_num_blocks;
    }

    /**
     * Max age of evidence, in blocks.
     * The basic formula for calculating this is: MaxAgeDuration / {average block
     * time}.
     *
     * Generated from protobuf field <code>int64 max_age_num_blocks = 1 [json_name = "maxAgeNumBlocks"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxAgeNumBlocks($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_age_num_blocks = $var;

        return $this;
    }

    /**
     * Max age of evidence, in time.
     * It should correspond with an app's "unbonding period" or other similar
     * mechanism for handling [Nothing-At-Stake
     * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_age_duration = 2 [json_name = "maxAgeDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMaxAgeDuration()
    {
        return $this->max_age_duration;
    }

    public function hasMaxAgeDuration()
    {
        return isset($this->max_age_duration);
    }

    public function clearMaxAgeDuration()
    {
        unset($this->max_age_duration);
    }

    /**
     * Max age of evidence, in time.
     * It should correspond with an app's "unbonding period" or other similar
     * mechanism for handling [Nothing-At-Stake
     * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_age_duration = 2 [json_name = "maxAgeDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaxAgeDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->max_age_duration = $var;

        return $this;
    }

    /**
     * This sets the maximum size of total evidence in bytes that can be committed in a single block.
     * and should fall comfortably under the max block bytes.
     * Default is 1048576 or 1MB
     *
     * Generated from protobuf field <code>int64 max_bytes = 3 [json_name = "maxBytes"];</code>
     * @return int|string
     */
    public function getMaxBytes()
    {
        return $this->max_bytes;
    }

    /**
     * This sets the maximum size of total evidence in bytes that can be committed in a single block.
     * and should fall comfortably under the max block bytes.
     * Default is 1048576 or 1MB
     *
     * Generated from protobuf field <code>int64 max_bytes = 3 [json_name = "maxBytes"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_bytes = $var;

        return $this;
    }

}

