<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tendermint/types/types.proto

namespace Tendermint\Types;

use UnexpectedValueException;

/**
 * BlockIdFlag indicates which BlcokID the signature is for
 *
 * Protobuf type <code>tendermint.types.BlockIDFlag</code>
 */
class BlockIDFlag
{
    /**
     * Generated from protobuf enum <code>BLOCK_ID_FLAG_UNKNOWN = 0 [(.gogoproto.enumvalue_customname) = "BlockIDFlagUnknown"];</code>
     */
    const BLOCK_ID_FLAG_UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>BLOCK_ID_FLAG_ABSENT = 1 [(.gogoproto.enumvalue_customname) = "BlockIDFlagAbsent"];</code>
     */
    const BLOCK_ID_FLAG_ABSENT = 1;
    /**
     * Generated from protobuf enum <code>BLOCK_ID_FLAG_COMMIT = 2 [(.gogoproto.enumvalue_customname) = "BlockIDFlagCommit"];</code>
     */
    const BLOCK_ID_FLAG_COMMIT = 2;
    /**
     * Generated from protobuf enum <code>BLOCK_ID_FLAG_NIL = 3 [(.gogoproto.enumvalue_customname) = "BlockIDFlagNil"];</code>
     */
    const BLOCK_ID_FLAG_NIL = 3;

    private static $valueToName = [
        self::BLOCK_ID_FLAG_UNKNOWN => 'BLOCK_ID_FLAG_UNKNOWN',
        self::BLOCK_ID_FLAG_ABSENT => 'BLOCK_ID_FLAG_ABSENT',
        self::BLOCK_ID_FLAG_COMMIT => 'BLOCK_ID_FLAG_COMMIT',
        self::BLOCK_ID_FLAG_NIL => 'BLOCK_ID_FLAG_NIL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

