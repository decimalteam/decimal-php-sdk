<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proofs.proto

namespace Ics23;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *ExistenceProof takes a key and a value and a set of steps to perform on it.
 *The result of peforming all these steps will provide a "root hash", which can
 *be compared to the value in a header.
 *Since it is computationally infeasible to produce a hash collission for any of the used
 *cryptographic hash functions, if someone can provide a series of operations to transform
 *a given key and value into a root hash that matches some trusted root, these key and values
 *must be in the referenced merkle tree.
 *The only possible issue is maliablity in LeafOp, such as providing extra prefix data,
 *which should be controlled by a spec. Eg. with lengthOp as NONE,
 * prefix = FOO, key = BAR, value = CHOICE
 *and
 * prefix = F, key = OOBAR, value = CHOICE
 *would produce the same value.
 *With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field
 *in the ProofSpec is valuable to prevent this mutability. And why all trees should
 *length-prefix the data before hashing it.
 *
 * Generated from protobuf message <code>ics23.ExistenceProof</code>
 */
class ExistenceProof extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes key = 1 [json_name = "key"];</code>
     */
    protected $key = '';
    /**
     * Generated from protobuf field <code>bytes value = 2 [json_name = "value"];</code>
     */
    protected $value = '';
    /**
     * Generated from protobuf field <code>.ics23.LeafOp leaf = 3 [json_name = "leaf"];</code>
     */
    protected $leaf = null;
    /**
     * Generated from protobuf field <code>repeated .ics23.InnerOp path = 4 [json_name = "path"];</code>
     */
    private $path;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $key
     *     @type string $value
     *     @type \Ics23\LeafOp $leaf
     *     @type \Ics23\InnerOp[]|\Google\Protobuf\Internal\RepeatedField $path
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proofs::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes key = 1 [json_name = "key"];</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * Generated from protobuf field <code>bytes key = 1 [json_name = "key"];</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes value = 2 [json_name = "value"];</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Generated from protobuf field <code>bytes value = 2 [json_name = "value"];</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.ics23.LeafOp leaf = 3 [json_name = "leaf"];</code>
     * @return \Ics23\LeafOp|null
     */
    public function getLeaf()
    {
        return $this->leaf;
    }

    public function hasLeaf()
    {
        return isset($this->leaf);
    }

    public function clearLeaf()
    {
        unset($this->leaf);
    }

    /**
     * Generated from protobuf field <code>.ics23.LeafOp leaf = 3 [json_name = "leaf"];</code>
     * @param \Ics23\LeafOp $var
     * @return $this
     */
    public function setLeaf($var)
    {
        GPBUtil::checkMessage($var, \Ics23\LeafOp::class);
        $this->leaf = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .ics23.InnerOp path = 4 [json_name = "path"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Generated from protobuf field <code>repeated .ics23.InnerOp path = 4 [json_name = "path"];</code>
     * @param \Ics23\InnerOp[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPath($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Ics23\InnerOp::class);
        $this->path = $arr;

        return $this;
    }

}

