<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/nft/v1/nft.proto

namespace Decimal\Nft\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * SubToken defines NFT sub-token.
 *
 * Generated from protobuf message <code>decimal.nft.v1.SubToken</code>
 */
class SubToken extends \Google\Protobuf\Internal\Message
{
    /**
     * id defines NFT sub-token internal ID in the parent NFT token.
     *
     * Generated from protobuf field <code>uint32 id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     */
    protected $id = 0;
    /**
     * owner defines address of the current owner of the NFT sub-token.
     *
     * Generated from protobuf field <code>string owner = 2 [json_name = "owner", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $owner = '';
    /**
     * reserve defines reserve of the NFT sub-token.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin reserve = 3 [json_name = "reserve"];</code>
     */
    protected $reserve = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $id
     *           id defines NFT sub-token internal ID in the parent NFT token.
     *     @type string $owner
     *           owner defines address of the current owner of the NFT sub-token.
     *     @type \Cosmos\Base\V1beta1\Coin $reserve
     *           reserve defines reserve of the NFT sub-token.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Decimal\Nft\V1\Nft::initOnce();
        parent::__construct($data);
    }

    /**
     * id defines NFT sub-token internal ID in the parent NFT token.
     *
     * Generated from protobuf field <code>uint32 id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id defines NFT sub-token internal ID in the parent NFT token.
     *
     * Generated from protobuf field <code>uint32 id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     * @param int $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;

        return $this;
    }

    /**
     * owner defines address of the current owner of the NFT sub-token.
     *
     * Generated from protobuf field <code>string owner = 2 [json_name = "owner", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getOwner()
    {
        return $this->owner;
    }

    /**
     * owner defines address of the current owner of the NFT sub-token.
     *
     * Generated from protobuf field <code>string owner = 2 [json_name = "owner", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setOwner($var)
    {
        GPBUtil::checkString($var, True);
        $this->owner = $var;

        return $this;
    }

    /**
     * reserve defines reserve of the NFT sub-token.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin reserve = 3 [json_name = "reserve"];</code>
     * @return \Cosmos\Base\V1beta1\Coin|null
     */
    public function getReserve()
    {
        return $this->reserve;
    }

    public function hasReserve()
    {
        return isset($this->reserve);
    }

    public function clearReserve()
    {
        unset($this->reserve);
    }

    /**
     * reserve defines reserve of the NFT sub-token.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin reserve = 3 [json_name = "reserve"];</code>
     * @param \Cosmos\Base\V1beta1\Coin $var
     * @return $this
     */
    public function setReserve($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Base\V1beta1\Coin::class);
        $this->reserve = $var;

        return $this;
    }

}

