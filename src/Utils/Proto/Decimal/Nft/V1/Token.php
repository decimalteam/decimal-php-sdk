<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/nft/v1/nft.proto

namespace Decimal\Nft\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Token defines NFT token.
 *
 * Generated from protobuf message <code>decimal.nft.v1.Token</code>
 */
class Token extends \Google\Protobuf\Internal\Message
{
    /**
     * creator defines address of the NFT collection creator.
     *
     * Generated from protobuf field <code>string creator = 1 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $creator = '';
    /**
     * denom defines the NFT collection name.
     *
     * Generated from protobuf field <code>string denom = 2 [json_name = "denom"];</code>
     */
    protected $denom = '';
    /**
     * id defines unique NFT token ID.
     *
     * Generated from protobuf field <code>string id = 3 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     */
    protected $id = '';
    /**
     * uri defines URI to the NFT token metadata.
     *
     * Generated from protobuf field <code>string uri = 4 [json_name = "uri", (.gogoproto.customname) = "URI"];</code>
     */
    protected $uri = '';
    /**
     * reserve defines default reserve of each minted NFT sub-token.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin reserve = 5 [json_name = "reserve", (.gogoproto.nullable) = false];</code>
     */
    protected $reserve = null;
    /**
     * allow_mint defines ability to mint additional NFT sub-tokens.
     *
     * Generated from protobuf field <code>bool allow_mint = 6 [json_name = "allowMint"];</code>
     */
    protected $allow_mint = false;
    /**
     * minted defines total count of minted NFT sub-tokens.
     *
     * Generated from protobuf field <code>uint32 minted = 7 [json_name = "minted"];</code>
     */
    protected $minted = 0;
    /**
     * burnt defines total count of burnt NFT sub-tokens.
     *
     * Generated from protobuf field <code>uint32 burnt = 8 [json_name = "burnt"];</code>
     */
    protected $burnt = 0;
    /**
     * sub_tokens defines the list of NFT sub-tokens existing in the NFT token.
     *
     * Generated from protobuf field <code>repeated .decimal.nft.v1.SubToken sub_tokens = 9 [json_name = "subTokens", (.gogoproto.castrepeated) = "SubTokens"];</code>
     */
    private $sub_tokens;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $creator
     *           creator defines address of the NFT collection creator.
     *     @type string $denom
     *           denom defines the NFT collection name.
     *     @type string $id
     *           id defines unique NFT token ID.
     *     @type string $uri
     *           uri defines URI to the NFT token metadata.
     *     @type \Cosmos\Base\V1beta1\Coin $reserve
     *           reserve defines default reserve of each minted NFT sub-token.
     *     @type bool $allow_mint
     *           allow_mint defines ability to mint additional NFT sub-tokens.
     *     @type int $minted
     *           minted defines total count of minted NFT sub-tokens.
     *     @type int $burnt
     *           burnt defines total count of burnt NFT sub-tokens.
     *     @type array<\Decimal\Nft\V1\SubToken>|\Google\Protobuf\Internal\RepeatedField $sub_tokens
     *           sub_tokens defines the list of NFT sub-tokens existing in the NFT token.
     * }
     */
    public function __construct($data = NULL) {
        \Decimal\Nft\V1\GPBMetadata\Nft::initOnce();
        parent::__construct($data);
    }

    /**
     * creator defines address of the NFT collection creator.
     *
     * Generated from protobuf field <code>string creator = 1 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getCreator()
    {
        return $this->creator;
    }

    /**
     * creator defines address of the NFT collection creator.
     *
     * Generated from protobuf field <code>string creator = 1 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setCreator($var)
    {
        GPBUtil::checkString($var, True);
        $this->creator = $var;

        return $this;
    }

    /**
     * denom defines the NFT collection name.
     *
     * Generated from protobuf field <code>string denom = 2 [json_name = "denom"];</code>
     * @return string
     */
    public function getDenom()
    {
        return $this->denom;
    }

    /**
     * denom defines the NFT collection name.
     *
     * Generated from protobuf field <code>string denom = 2 [json_name = "denom"];</code>
     * @param string $var
     * @return $this
     */
    public function setDenom($var)
    {
        GPBUtil::checkString($var, True);
        $this->denom = $var;

        return $this;
    }

    /**
     * id defines unique NFT token ID.
     *
     * Generated from protobuf field <code>string id = 3 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id defines unique NFT token ID.
     *
     * Generated from protobuf field <code>string id = 3 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * uri defines URI to the NFT token metadata.
     *
     * Generated from protobuf field <code>string uri = 4 [json_name = "uri", (.gogoproto.customname) = "URI"];</code>
     * @return string
     */
    public function getUri()
    {
        return $this->uri;
    }

    /**
     * uri defines URI to the NFT token metadata.
     *
     * Generated from protobuf field <code>string uri = 4 [json_name = "uri", (.gogoproto.customname) = "URI"];</code>
     * @param string $var
     * @return $this
     */
    public function setUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->uri = $var;

        return $this;
    }

    /**
     * reserve defines default reserve of each minted NFT sub-token.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin reserve = 5 [json_name = "reserve", (.gogoproto.nullable) = false];</code>
     * @return \Cosmos\Base\V1beta1\Coin|null
     */
    public function getReserve()
    {
        return $this->reserve;
    }

    public function hasReserve()
    {
        return isset($this->reserve);
    }

    public function clearReserve()
    {
        unset($this->reserve);
    }

    /**
     * reserve defines default reserve of each minted NFT sub-token.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin reserve = 5 [json_name = "reserve", (.gogoproto.nullable) = false];</code>
     * @param \Cosmos\Base\V1beta1\Coin $var
     * @return $this
     */
    public function setReserve($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Base\V1beta1\Coin::class);
        $this->reserve = $var;

        return $this;
    }

    /**
     * allow_mint defines ability to mint additional NFT sub-tokens.
     *
     * Generated from protobuf field <code>bool allow_mint = 6 [json_name = "allowMint"];</code>
     * @return bool
     */
    public function getAllowMint()
    {
        return $this->allow_mint;
    }

    /**
     * allow_mint defines ability to mint additional NFT sub-tokens.
     *
     * Generated from protobuf field <code>bool allow_mint = 6 [json_name = "allowMint"];</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowMint($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_mint = $var;

        return $this;
    }

    /**
     * minted defines total count of minted NFT sub-tokens.
     *
     * Generated from protobuf field <code>uint32 minted = 7 [json_name = "minted"];</code>
     * @return int
     */
    public function getMinted()
    {
        return $this->minted;
    }

    /**
     * minted defines total count of minted NFT sub-tokens.
     *
     * Generated from protobuf field <code>uint32 minted = 7 [json_name = "minted"];</code>
     * @param int $var
     * @return $this
     */
    public function setMinted($var)
    {
        GPBUtil::checkUint32($var);
        $this->minted = $var;

        return $this;
    }

    /**
     * burnt defines total count of burnt NFT sub-tokens.
     *
     * Generated from protobuf field <code>uint32 burnt = 8 [json_name = "burnt"];</code>
     * @return int
     */
    public function getBurnt()
    {
        return $this->burnt;
    }

    /**
     * burnt defines total count of burnt NFT sub-tokens.
     *
     * Generated from protobuf field <code>uint32 burnt = 8 [json_name = "burnt"];</code>
     * @param int $var
     * @return $this
     */
    public function setBurnt($var)
    {
        GPBUtil::checkUint32($var);
        $this->burnt = $var;

        return $this;
    }

    /**
     * sub_tokens defines the list of NFT sub-tokens existing in the NFT token.
     *
     * Generated from protobuf field <code>repeated .decimal.nft.v1.SubToken sub_tokens = 9 [json_name = "subTokens", (.gogoproto.castrepeated) = "SubTokens"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSubTokens()
    {
        return $this->sub_tokens;
    }

    /**
     * sub_tokens defines the list of NFT sub-tokens existing in the NFT token.
     *
     * Generated from protobuf field <code>repeated .decimal.nft.v1.SubToken sub_tokens = 9 [json_name = "subTokens", (.gogoproto.castrepeated) = "SubTokens"];</code>
     * @param array<\Decimal\Nft\V1\SubToken>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSubTokens($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Decimal\Nft\V1\SubToken::class);
        $this->sub_tokens = $arr;

        return $this;
    }

}

