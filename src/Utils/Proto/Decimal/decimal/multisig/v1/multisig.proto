syntax = "proto3";
package decimal.multisig.v1;

import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/multisig/types";

// Wallet defines multisig wallet.
message Wallet {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated string owners = 2;
  repeated uint32 weights = 3;
  uint32 threshold = 4;
}

// Transaction defines multisig transaction.
message Transaction {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string id = 1;
  string wallet = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string receiver = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin coins = 4
      [ (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false ];
  repeated string signers = 5;
  int64 created_at = 6;
}
