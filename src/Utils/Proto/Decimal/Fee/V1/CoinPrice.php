<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/fee/v1/fee.proto

namespace Decimal\Fee\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * CoinPrice defines the coin price.
 *
 * Generated from protobuf message <code>decimal.fee.v1.CoinPrice</code>
 */
class CoinPrice extends \Google\Protobuf\Internal\Message
{
    /**
     * denom defines the base currency (coin) denomination which is priced.
     *
     * Generated from protobuf field <code>string denom = 1 [json_name = "denom"];</code>
     */
    protected $denom = '';
    /**
     * quote defines the quote currency denomination in the pair (USD as the first example).
     *
     * Generated from protobuf field <code>string quote = 2 [json_name = "quote"];</code>
     */
    protected $quote = '';
    /**
     * price defines the coin price in quote currency.
     *
     * Generated from protobuf field <code>string price = 3 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     */
    protected $price = '';
    /**
     * updated_at defines the moment of the previous coin price update.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated_at = 4 [json_name = "updatedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $updated_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $denom
     *           denom defines the base currency (coin) denomination which is priced.
     *     @type string $quote
     *           quote defines the quote currency denomination in the pair (USD as the first example).
     *     @type string $price
     *           price defines the coin price in quote currency.
     *     @type \Google\Protobuf\Timestamp $updated_at
     *           updated_at defines the moment of the previous coin price update.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Decimal\Fee\V1\Fee::initOnce();
        parent::__construct($data);
    }

    /**
     * denom defines the base currency (coin) denomination which is priced.
     *
     * Generated from protobuf field <code>string denom = 1 [json_name = "denom"];</code>
     * @return string
     */
    public function getDenom()
    {
        return $this->denom;
    }

    /**
     * denom defines the base currency (coin) denomination which is priced.
     *
     * Generated from protobuf field <code>string denom = 1 [json_name = "denom"];</code>
     * @param string $var
     * @return $this
     */
    public function setDenom($var)
    {
        GPBUtil::checkString($var, True);
        $this->denom = $var;

        return $this;
    }

    /**
     * quote defines the quote currency denomination in the pair (USD as the first example).
     *
     * Generated from protobuf field <code>string quote = 2 [json_name = "quote"];</code>
     * @return string
     */
    public function getQuote()
    {
        return $this->quote;
    }

    /**
     * quote defines the quote currency denomination in the pair (USD as the first example).
     *
     * Generated from protobuf field <code>string quote = 2 [json_name = "quote"];</code>
     * @param string $var
     * @return $this
     */
    public function setQuote($var)
    {
        GPBUtil::checkString($var, True);
        $this->quote = $var;

        return $this;
    }

    /**
     * price defines the coin price in quote currency.
     *
     * Generated from protobuf field <code>string price = 3 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return string
     */
    public function getPrice()
    {
        return $this->price;
    }

    /**
     * price defines the coin price in quote currency.
     *
     * Generated from protobuf field <code>string price = 3 [json_name = "price", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @param string $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkString($var, True);
        $this->price = $var;

        return $this;
    }

    /**
     * updated_at defines the moment of the previous coin price update.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated_at = 4 [json_name = "updatedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    public function hasUpdatedAt()
    {
        return isset($this->updated_at);
    }

    public function clearUpdatedAt()
    {
        unset($this->updated_at);
    }

    /**
     * updated_at defines the moment of the previous coin price update.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated_at = 4 [json_name = "updatedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdatedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated_at = $var;

        return $this;
    }

}

