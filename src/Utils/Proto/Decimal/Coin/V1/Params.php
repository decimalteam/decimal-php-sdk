<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/coin/v1/params.proto

namespace Decimal\Coin\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Params defines the parameters for the module.
 *
 * Generated from protobuf message <code>decimal.coin.v1.Params</code>
 */
class Params extends \Google\Protobuf\Internal\Message
{
    /**
     * base_denom defines denomination of the base coin.
     *
     * Generated from protobuf field <code>string base_denom = 1 [json_name = "baseDenom"];</code>
     */
    protected $base_denom = '';
    /**
     * base_title defines title of the base coin.
     *
     * Generated from protobuf field <code>string base_title = 2 [json_name = "baseTitle"];</code>
     */
    protected $base_title = '';
    /**
     * base_volume defines initial volume of the base coin.
     *
     * Generated from protobuf field <code>string base_volume = 3 [json_name = "baseVolume", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     */
    protected $base_volume = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $base_denom
     *           base_denom defines denomination of the base coin.
     *     @type string $base_title
     *           base_title defines title of the base coin.
     *     @type string $base_volume
     *           base_volume defines initial volume of the base coin.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Decimal\Coin\V1\Params::initOnce();
        parent::__construct($data);
    }

    /**
     * base_denom defines denomination of the base coin.
     *
     * Generated from protobuf field <code>string base_denom = 1 [json_name = "baseDenom"];</code>
     * @return string
     */
    public function getBaseDenom()
    {
        return $this->base_denom;
    }

    /**
     * base_denom defines denomination of the base coin.
     *
     * Generated from protobuf field <code>string base_denom = 1 [json_name = "baseDenom"];</code>
     * @param string $var
     * @return $this
     */
    public function setBaseDenom($var)
    {
        GPBUtil::checkString($var, True);
        $this->base_denom = $var;

        return $this;
    }

    /**
     * base_title defines title of the base coin.
     *
     * Generated from protobuf field <code>string base_title = 2 [json_name = "baseTitle"];</code>
     * @return string
     */
    public function getBaseTitle()
    {
        return $this->base_title;
    }

    /**
     * base_title defines title of the base coin.
     *
     * Generated from protobuf field <code>string base_title = 2 [json_name = "baseTitle"];</code>
     * @param string $var
     * @return $this
     */
    public function setBaseTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->base_title = $var;

        return $this;
    }

    /**
     * base_volume defines initial volume of the base coin.
     *
     * Generated from protobuf field <code>string base_volume = 3 [json_name = "baseVolume", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return string
     */
    public function getBaseVolume()
    {
        return $this->base_volume;
    }

    /**
     * base_volume defines initial volume of the base coin.
     *
     * Generated from protobuf field <code>string base_volume = 3 [json_name = "baseVolume", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @param string $var
     * @return $this
     */
    public function setBaseVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->base_volume = $var;

        return $this;
    }

}

