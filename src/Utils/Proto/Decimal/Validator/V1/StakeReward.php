<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/validator/v1/events.proto

namespace Decimal\Validator\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * StakeReward contains delegator stake ID and amount of a reward in base coin.
 *
 * Generated from protobuf message <code>decimal.validator.v1.StakeReward</code>
 */
class StakeReward extends \Google\Protobuf\Internal\Message
{
    /**
     * id defines the stake ID.
     * For stake in Coin: contains coin denom value.
     * For stake in NFT: contains NFT token ID value.
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     */
    protected $id = '';
    /**
     * reward is the amount of the reward in base coin.
     *
     * Generated from protobuf field <code>string reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     */
    protected $reward = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           id defines the stake ID.
     *           For stake in Coin: contains coin denom value.
     *           For stake in NFT: contains NFT token ID value.
     *     @type string $reward
     *           reward is the amount of the reward in base coin.
     * }
     */
    public function __construct($data = NULL) {
        \Decimal\Validator\V1\GPBMetadata\Events::initOnce();
        parent::__construct($data);
    }

    /**
     * id defines the stake ID.
     * For stake in Coin: contains coin denom value.
     * For stake in NFT: contains NFT token ID value.
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id defines the stake ID.
     * For stake in Coin: contains coin denom value.
     * For stake in NFT: contains NFT token ID value.
     *
     * Generated from protobuf field <code>string id = 1 [json_name = "id", (.gogoproto.customname) = "ID"];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * reward is the amount of the reward in base coin.
     *
     * Generated from protobuf field <code>string reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return string
     */
    public function getReward()
    {
        return $this->reward;
    }

    /**
     * reward is the amount of the reward in base coin.
     *
     * Generated from protobuf field <code>string reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @param string $var
     * @return $this
     */
    public function setReward($var)
    {
        GPBUtil::checkString($var, True);
        $this->reward = $var;

        return $this;
    }

}

