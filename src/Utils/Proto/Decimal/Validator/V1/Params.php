<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/validator/v1/params.proto

namespace Decimal\Validator\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Params defines the parameters for the module.
 *
 * Generated from protobuf message <code>decimal.validator.v1.Params</code>
 */
class Params extends \Google\Protobuf\Internal\Message
{
    /**
     * max_validators defines the maximum number of validators can be bounded at the same time.
     *
     * Generated from protobuf field <code>uint32 max_validators = 1 [json_name = "maxValidators"];</code>
     */
    protected $max_validators = 0;
    /**
     * max_delegations defines the maximum number of delegations per validator at be bounded at the same time.
     *
     * Generated from protobuf field <code>uint32 max_delegations = 2 [json_name = "maxDelegations"];</code>
     */
    protected $max_delegations = 0;
    /**
     * max_entries defines the max entries for single undelegation/redelegation (per pair/trio).
     *
     * Generated from protobuf field <code>uint32 max_entries = 3 [json_name = "maxEntries"];</code>
     */
    protected $max_entries = 0;
    /**
     * historical_entries defines the number of historical entries to persist.
     *
     * Generated from protobuf field <code>uint32 historical_entries = 4 [json_name = "historicalEntries"];</code>
     */
    protected $historical_entries = 0;
    /**
     * redelegation_time defines the time duration of redelegation a stake (moving to the other validator).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration redelegation_time = 5 [json_name = "redelegationTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $redelegation_time = null;
    /**
     * undelegation_time defines the time duration of undelegation a stake (unbonding from the validator).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration undelegation_time = 6 [json_name = "undelegationTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $undelegation_time = null;
    /**
     * base_denom is base denom on the basis of which power is calculated
     *
     * Generated from protobuf field <code>string base_denom = 7 [json_name = "baseDenom"];</code>
     */
    protected $base_denom = '';
    /**
     * width of sliding window for downtime slashing
     *
     * Generated from protobuf field <code>int64 signed_blocks_window = 10 [json_name = "signedBlocksWindow"];</code>
     */
    protected $signed_blocks_window = 0;
    /**
     * minimum blocks signed per window
     *
     * Generated from protobuf field <code>bytes min_signed_per_window = 11 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     */
    protected $min_signed_per_window = '';
    /**
     * downtime jail duration
     *
     * Generated from protobuf field <code>.google.protobuf.Duration downtime_jail_duration = 12 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $downtime_jail_duration = null;
    /**
     * fraction of power slashed in case of double sign
     *
     * Generated from protobuf field <code>bytes slash_fraction_double_sign = 13 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     */
    protected $slash_fraction_double_sign = '';
    /**
     * fraction of power slashed for downtime
     *
     * Generated from protobuf field <code>bytes slash_fraction_downtime = 14 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     */
    protected $slash_fraction_downtime = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_validators
     *           max_validators defines the maximum number of validators can be bounded at the same time.
     *     @type int $max_delegations
     *           max_delegations defines the maximum number of delegations per validator at be bounded at the same time.
     *     @type int $max_entries
     *           max_entries defines the max entries for single undelegation/redelegation (per pair/trio).
     *     @type int $historical_entries
     *           historical_entries defines the number of historical entries to persist.
     *     @type \Google\Protobuf\Duration $redelegation_time
     *           redelegation_time defines the time duration of redelegation a stake (moving to the other validator).
     *     @type \Google\Protobuf\Duration $undelegation_time
     *           undelegation_time defines the time duration of undelegation a stake (unbonding from the validator).
     *     @type string $base_denom
     *           base_denom is base denom on the basis of which power is calculated
     *     @type int|string $signed_blocks_window
     *           width of sliding window for downtime slashing
     *     @type string $min_signed_per_window
     *           minimum blocks signed per window
     *     @type \Google\Protobuf\Duration $downtime_jail_duration
     *           downtime jail duration
     *     @type string $slash_fraction_double_sign
     *           fraction of power slashed in case of double sign
     *     @type string $slash_fraction_downtime
     *           fraction of power slashed for downtime
     * }
     */
    public function __construct($data = NULL) {
        \Decimal\Validator\V1\GPBMetadata\Params::initOnce();
        parent::__construct($data);
    }

    /**
     * max_validators defines the maximum number of validators can be bounded at the same time.
     *
     * Generated from protobuf field <code>uint32 max_validators = 1 [json_name = "maxValidators"];</code>
     * @return int
     */
    public function getMaxValidators()
    {
        return $this->max_validators;
    }

    /**
     * max_validators defines the maximum number of validators can be bounded at the same time.
     *
     * Generated from protobuf field <code>uint32 max_validators = 1 [json_name = "maxValidators"];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxValidators($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_validators = $var;

        return $this;
    }

    /**
     * max_delegations defines the maximum number of delegations per validator at be bounded at the same time.
     *
     * Generated from protobuf field <code>uint32 max_delegations = 2 [json_name = "maxDelegations"];</code>
     * @return int
     */
    public function getMaxDelegations()
    {
        return $this->max_delegations;
    }

    /**
     * max_delegations defines the maximum number of delegations per validator at be bounded at the same time.
     *
     * Generated from protobuf field <code>uint32 max_delegations = 2 [json_name = "maxDelegations"];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxDelegations($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_delegations = $var;

        return $this;
    }

    /**
     * max_entries defines the max entries for single undelegation/redelegation (per pair/trio).
     *
     * Generated from protobuf field <code>uint32 max_entries = 3 [json_name = "maxEntries"];</code>
     * @return int
     */
    public function getMaxEntries()
    {
        return $this->max_entries;
    }

    /**
     * max_entries defines the max entries for single undelegation/redelegation (per pair/trio).
     *
     * Generated from protobuf field <code>uint32 max_entries = 3 [json_name = "maxEntries"];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxEntries($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_entries = $var;

        return $this;
    }

    /**
     * historical_entries defines the number of historical entries to persist.
     *
     * Generated from protobuf field <code>uint32 historical_entries = 4 [json_name = "historicalEntries"];</code>
     * @return int
     */
    public function getHistoricalEntries()
    {
        return $this->historical_entries;
    }

    /**
     * historical_entries defines the number of historical entries to persist.
     *
     * Generated from protobuf field <code>uint32 historical_entries = 4 [json_name = "historicalEntries"];</code>
     * @param int $var
     * @return $this
     */
    public function setHistoricalEntries($var)
    {
        GPBUtil::checkUint32($var);
        $this->historical_entries = $var;

        return $this;
    }

    /**
     * redelegation_time defines the time duration of redelegation a stake (moving to the other validator).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration redelegation_time = 5 [json_name = "redelegationTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getRedelegationTime()
    {
        return $this->redelegation_time;
    }

    public function hasRedelegationTime()
    {
        return isset($this->redelegation_time);
    }

    public function clearRedelegationTime()
    {
        unset($this->redelegation_time);
    }

    /**
     * redelegation_time defines the time duration of redelegation a stake (moving to the other validator).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration redelegation_time = 5 [json_name = "redelegationTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setRedelegationTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->redelegation_time = $var;

        return $this;
    }

    /**
     * undelegation_time defines the time duration of undelegation a stake (unbonding from the validator).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration undelegation_time = 6 [json_name = "undelegationTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getUndelegationTime()
    {
        return $this->undelegation_time;
    }

    public function hasUndelegationTime()
    {
        return isset($this->undelegation_time);
    }

    public function clearUndelegationTime()
    {
        unset($this->undelegation_time);
    }

    /**
     * undelegation_time defines the time duration of undelegation a stake (unbonding from the validator).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration undelegation_time = 6 [json_name = "undelegationTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setUndelegationTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->undelegation_time = $var;

        return $this;
    }

    /**
     * base_denom is base denom on the basis of which power is calculated
     *
     * Generated from protobuf field <code>string base_denom = 7 [json_name = "baseDenom"];</code>
     * @return string
     */
    public function getBaseDenom()
    {
        return $this->base_denom;
    }

    /**
     * base_denom is base denom on the basis of which power is calculated
     *
     * Generated from protobuf field <code>string base_denom = 7 [json_name = "baseDenom"];</code>
     * @param string $var
     * @return $this
     */
    public function setBaseDenom($var)
    {
        GPBUtil::checkString($var, True);
        $this->base_denom = $var;

        return $this;
    }

    /**
     * width of sliding window for downtime slashing
     *
     * Generated from protobuf field <code>int64 signed_blocks_window = 10 [json_name = "signedBlocksWindow"];</code>
     * @return int|string
     */
    public function getSignedBlocksWindow()
    {
        return $this->signed_blocks_window;
    }

    /**
     * width of sliding window for downtime slashing
     *
     * Generated from protobuf field <code>int64 signed_blocks_window = 10 [json_name = "signedBlocksWindow"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setSignedBlocksWindow($var)
    {
        GPBUtil::checkInt64($var);
        $this->signed_blocks_window = $var;

        return $this;
    }

    /**
     * minimum blocks signed per window
     *
     * Generated from protobuf field <code>bytes min_signed_per_window = 11 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return string
     */
    public function getMinSignedPerWindow()
    {
        return $this->min_signed_per_window;
    }

    /**
     * minimum blocks signed per window
     *
     * Generated from protobuf field <code>bytes min_signed_per_window = 11 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param string $var
     * @return $this
     */
    public function setMinSignedPerWindow($var)
    {
        GPBUtil::checkString($var, False);
        $this->min_signed_per_window = $var;

        return $this;
    }

    /**
     * downtime jail duration
     *
     * Generated from protobuf field <code>.google.protobuf.Duration downtime_jail_duration = 12 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getDowntimeJailDuration()
    {
        return $this->downtime_jail_duration;
    }

    public function hasDowntimeJailDuration()
    {
        return isset($this->downtime_jail_duration);
    }

    public function clearDowntimeJailDuration()
    {
        unset($this->downtime_jail_duration);
    }

    /**
     * downtime jail duration
     *
     * Generated from protobuf field <code>.google.protobuf.Duration downtime_jail_duration = 12 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setDowntimeJailDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->downtime_jail_duration = $var;

        return $this;
    }

    /**
     * fraction of power slashed in case of double sign
     *
     * Generated from protobuf field <code>bytes slash_fraction_double_sign = 13 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return string
     */
    public function getSlashFractionDoubleSign()
    {
        return $this->slash_fraction_double_sign;
    }

    /**
     * fraction of power slashed in case of double sign
     *
     * Generated from protobuf field <code>bytes slash_fraction_double_sign = 13 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param string $var
     * @return $this
     */
    public function setSlashFractionDoubleSign($var)
    {
        GPBUtil::checkString($var, False);
        $this->slash_fraction_double_sign = $var;

        return $this;
    }

    /**
     * fraction of power slashed for downtime
     *
     * Generated from protobuf field <code>bytes slash_fraction_downtime = 14 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @return string
     */
    public function getSlashFractionDowntime()
    {
        return $this->slash_fraction_downtime;
    }

    /**
     * fraction of power slashed for downtime
     *
     * Generated from protobuf field <code>bytes slash_fraction_downtime = 14 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     * @param string $var
     * @return $this
     */
    public function setSlashFractionDowntime($var)
    {
        GPBUtil::checkString($var, False);
        $this->slash_fraction_downtime = $var;

        return $this;
    }

}

