<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: decimal/validator/v1/validator.proto

namespace Decimal\Validator\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Validator defines a validator, together with the total amount of the
 * Validator's bond shares and their exchange rate to coins. Slashing results in
 * a decrease in the exchange rate, allowing correct calculation of future
 * undelegations without iterating over delegators. When coins are delegated to
 * this validator, the validator is credited with a delegation whose number of
 * bond shares is based on the amount of coins delegated divided by the current
 * exchange rate. Voting power can be calculated as total bonded shares
 * multiplied by exchange rate.
 *
 * Generated from protobuf message <code>decimal.validator.v1.Validator</code>
 */
class Validator extends \Google\Protobuf\Internal\Message
{
    /**
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     *
     * Generated from protobuf field <code>string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $operator_address = '';
    /**
     * consensus_pubkey is the consensus public key of the validator, as a
     * Protobuf Any.
     *
     * Generated from protobuf field <code>.google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];</code>
     */
    protected $consensus_pubkey = null;
    /**
     * jailed defined whether the validator has been jailed from bonded status or
     * not.
     *
     * Generated from protobuf field <code>bool jailed = 3 [json_name = "jailed"];</code>
     */
    protected $jailed = false;
    /**
     * status is the validator status (bonded/unbonding/unbonded).
     *
     * Generated from protobuf field <code>.decimal.validator.v1.BondStatus status = 4 [json_name = "status"];</code>
     */
    protected $status = 0;
    /**
     * tokens define the delegated tokens (incl. self-delegation).
     *
     * Generated from protobuf field <code>string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     */
    protected $tokens = '';
    /**
     * delegator_shares defines total shares issued to a validator's delegators.
     *
     * Generated from protobuf field <code>string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     */
    protected $delegator_shares = '';
    /**
     * description defines the description terms for the validator.
     *
     * Generated from protobuf field <code>.decimal.validator.v1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false];</code>
     */
    protected $description = null;
    /**
     * unbonding_height defines, if unbonding, the height at which this validator
     * has begun unbonding.
     *
     * Generated from protobuf field <code>int64 unbonding_height = 8 [json_name = "unbondingHeight"];</code>
     */
    protected $unbonding_height = 0;
    /**
     * unbonding_time defines, if unbonding, the min time for the validator to
     * complete unbonding.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $unbonding_time = null;
    /**
     * commission defines the commission parameters.
     *
     * Generated from protobuf field <code>.decimal.validator.v1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false];</code>
     */
    protected $commission = null;
    /**
     * min_self_delegation is the validator's self declared minimum self
     * delegation.
     *
     * Generated from protobuf field <code>string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     */
    protected $min_self_delegation = '';
    /**
     * total_rewards is the pool of all collected rewards.
     *
     * Generated from protobuf field <code>string total_rewards = 12 [json_name = "totalRewards", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     */
    protected $total_rewards = '';
    /**
     * reward_address defines the address of the account for withdrawing rewards;
     * bech encoded in JSON.
     *
     * Generated from protobuf field <code>string reward_address = 13 [json_name = "rewardAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $reward_address = '';
    /**
     * online is true if the validator participates in the consensus.
     *
     * Generated from protobuf field <code>bool online = 14 [json_name = "online"];</code>
     */
    protected $online = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $operator_address
     *           operator_address defines the address of the validator's operator; bech encoded in JSON.
     *     @type \Google\Protobuf\Any $consensus_pubkey
     *           consensus_pubkey is the consensus public key of the validator, as a
     *           Protobuf Any.
     *     @type bool $jailed
     *           jailed defined whether the validator has been jailed from bonded status or
     *           not.
     *     @type int $status
     *           status is the validator status (bonded/unbonding/unbonded).
     *     @type string $tokens
     *           tokens define the delegated tokens (incl. self-delegation).
     *     @type string $delegator_shares
     *           delegator_shares defines total shares issued to a validator's delegators.
     *     @type \Decimal\Validator\V1\Description $description
     *           description defines the description terms for the validator.
     *     @type int|string $unbonding_height
     *           unbonding_height defines, if unbonding, the height at which this validator
     *           has begun unbonding.
     *     @type \Google\Protobuf\Timestamp $unbonding_time
     *           unbonding_time defines, if unbonding, the min time for the validator to
     *           complete unbonding.
     *     @type \Decimal\Validator\V1\Commission $commission
     *           commission defines the commission parameters.
     *     @type string $min_self_delegation
     *           min_self_delegation is the validator's self declared minimum self
     *           delegation.
     *     @type string $total_rewards
     *           total_rewards is the pool of all collected rewards.
     *     @type string $reward_address
     *           reward_address defines the address of the account for withdrawing rewards;
     *           bech encoded in JSON.
     *     @type bool $online
     *           online is true if the validator participates in the consensus.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Decimal\Validator\V1\Validator::initOnce();
        parent::__construct($data);
    }

    /**
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     *
     * Generated from protobuf field <code>string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getOperatorAddress()
    {
        return $this->operator_address;
    }

    /**
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     *
     * Generated from protobuf field <code>string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setOperatorAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->operator_address = $var;

        return $this;
    }

    /**
     * consensus_pubkey is the consensus public key of the validator, as a
     * Protobuf Any.
     *
     * Generated from protobuf field <code>.google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];</code>
     * @return \Google\Protobuf\Any|null
     */
    public function getConsensusPubkey()
    {
        return $this->consensus_pubkey;
    }

    public function hasConsensusPubkey()
    {
        return isset($this->consensus_pubkey);
    }

    public function clearConsensusPubkey()
    {
        unset($this->consensus_pubkey);
    }

    /**
     * consensus_pubkey is the consensus public key of the validator, as a
     * Protobuf Any.
     *
     * Generated from protobuf field <code>.google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];</code>
     * @param \Google\Protobuf\Any $var
     * @return $this
     */
    public function setConsensusPubkey($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Any::class);
        $this->consensus_pubkey = $var;

        return $this;
    }

    /**
     * jailed defined whether the validator has been jailed from bonded status or
     * not.
     *
     * Generated from protobuf field <code>bool jailed = 3 [json_name = "jailed"];</code>
     * @return bool
     */
    public function getJailed()
    {
        return $this->jailed;
    }

    /**
     * jailed defined whether the validator has been jailed from bonded status or
     * not.
     *
     * Generated from protobuf field <code>bool jailed = 3 [json_name = "jailed"];</code>
     * @param bool $var
     * @return $this
     */
    public function setJailed($var)
    {
        GPBUtil::checkBool($var);
        $this->jailed = $var;

        return $this;
    }

    /**
     * status is the validator status (bonded/unbonding/unbonded).
     *
     * Generated from protobuf field <code>.decimal.validator.v1.BondStatus status = 4 [json_name = "status"];</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status is the validator status (bonded/unbonding/unbonded).
     *
     * Generated from protobuf field <code>.decimal.validator.v1.BondStatus status = 4 [json_name = "status"];</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Decimal\Validator\V1\BondStatus::class);
        $this->status = $var;

        return $this;
    }

    /**
     * tokens define the delegated tokens (incl. self-delegation).
     *
     * Generated from protobuf field <code>string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return string
     */
    public function getTokens()
    {
        return $this->tokens;
    }

    /**
     * tokens define the delegated tokens (incl. self-delegation).
     *
     * Generated from protobuf field <code>string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @param string $var
     * @return $this
     */
    public function setTokens($var)
    {
        GPBUtil::checkString($var, True);
        $this->tokens = $var;

        return $this;
    }

    /**
     * delegator_shares defines total shares issued to a validator's delegators.
     *
     * Generated from protobuf field <code>string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @return string
     */
    public function getDelegatorShares()
    {
        return $this->delegator_shares;
    }

    /**
     * delegator_shares defines total shares issued to a validator's delegators.
     *
     * Generated from protobuf field <code>string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.cosmos_proto.scalar) = "cosmos.Dec"];</code>
     * @param string $var
     * @return $this
     */
    public function setDelegatorShares($var)
    {
        GPBUtil::checkString($var, True);
        $this->delegator_shares = $var;

        return $this;
    }

    /**
     * description defines the description terms for the validator.
     *
     * Generated from protobuf field <code>.decimal.validator.v1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false];</code>
     * @return \Decimal\Validator\V1\Description|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    public function hasDescription()
    {
        return isset($this->description);
    }

    public function clearDescription()
    {
        unset($this->description);
    }

    /**
     * description defines the description terms for the validator.
     *
     * Generated from protobuf field <code>.decimal.validator.v1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false];</code>
     * @param \Decimal\Validator\V1\Description $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkMessage($var, \Decimal\Validator\V1\Description::class);
        $this->description = $var;

        return $this;
    }

    /**
     * unbonding_height defines, if unbonding, the height at which this validator
     * has begun unbonding.
     *
     * Generated from protobuf field <code>int64 unbonding_height = 8 [json_name = "unbondingHeight"];</code>
     * @return int|string
     */
    public function getUnbondingHeight()
    {
        return $this->unbonding_height;
    }

    /**
     * unbonding_height defines, if unbonding, the height at which this validator
     * has begun unbonding.
     *
     * Generated from protobuf field <code>int64 unbonding_height = 8 [json_name = "unbondingHeight"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setUnbondingHeight($var)
    {
        GPBUtil::checkInt64($var);
        $this->unbonding_height = $var;

        return $this;
    }

    /**
     * unbonding_time defines, if unbonding, the min time for the validator to
     * complete unbonding.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUnbondingTime()
    {
        return $this->unbonding_time;
    }

    public function hasUnbondingTime()
    {
        return isset($this->unbonding_time);
    }

    public function clearUnbondingTime()
    {
        unset($this->unbonding_time);
    }

    /**
     * unbonding_time defines, if unbonding, the min time for the validator to
     * complete unbonding.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUnbondingTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->unbonding_time = $var;

        return $this;
    }

    /**
     * commission defines the commission parameters.
     *
     * Generated from protobuf field <code>.decimal.validator.v1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false];</code>
     * @return \Decimal\Validator\V1\Commission|null
     */
    public function getCommission()
    {
        return $this->commission;
    }

    public function hasCommission()
    {
        return isset($this->commission);
    }

    public function clearCommission()
    {
        unset($this->commission);
    }

    /**
     * commission defines the commission parameters.
     *
     * Generated from protobuf field <code>.decimal.validator.v1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false];</code>
     * @param \Decimal\Validator\V1\Commission $var
     * @return $this
     */
    public function setCommission($var)
    {
        GPBUtil::checkMessage($var, \Decimal\Validator\V1\Commission::class);
        $this->commission = $var;

        return $this;
    }

    /**
     * min_self_delegation is the validator's self declared minimum self
     * delegation.
     *
     * Generated from protobuf field <code>string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return string
     */
    public function getMinSelfDelegation()
    {
        return $this->min_self_delegation;
    }

    /**
     * min_self_delegation is the validator's self declared minimum self
     * delegation.
     *
     * Generated from protobuf field <code>string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @param string $var
     * @return $this
     */
    public function setMinSelfDelegation($var)
    {
        GPBUtil::checkString($var, True);
        $this->min_self_delegation = $var;

        return $this;
    }

    /**
     * total_rewards is the pool of all collected rewards.
     *
     * Generated from protobuf field <code>string total_rewards = 12 [json_name = "totalRewards", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return string
     */
    public function getTotalRewards()
    {
        return $this->total_rewards;
    }

    /**
     * total_rewards is the pool of all collected rewards.
     *
     * Generated from protobuf field <code>string total_rewards = 12 [json_name = "totalRewards", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @param string $var
     * @return $this
     */
    public function setTotalRewards($var)
    {
        GPBUtil::checkString($var, True);
        $this->total_rewards = $var;

        return $this;
    }

    /**
     * reward_address defines the address of the account for withdrawing rewards;
     * bech encoded in JSON.
     *
     * Generated from protobuf field <code>string reward_address = 13 [json_name = "rewardAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getRewardAddress()
    {
        return $this->reward_address;
    }

    /**
     * reward_address defines the address of the account for withdrawing rewards;
     * bech encoded in JSON.
     *
     * Generated from protobuf field <code>string reward_address = 13 [json_name = "rewardAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setRewardAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->reward_address = $var;

        return $this;
    }

    /**
     * online is true if the validator participates in the consensus.
     *
     * Generated from protobuf field <code>bool online = 14 [json_name = "online"];</code>
     * @return bool
     */
    public function getOnline()
    {
        return $this->online;
    }

    /**
     * online is true if the validator participates in the consensus.
     *
     * Generated from protobuf field <code>bool online = 14 [json_name = "online"];</code>
     * @param bool $var
     * @return $this
     */
    public function setOnline($var)
    {
        GPBUtil::checkBool($var);
        $this->online = $var;

        return $this;
    }

}

