<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/distribution/v1beta1/distribution.proto

namespace Cosmos\Distribution\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DelegatorStartingInfo represents the starting info for a delegator reward
 * period. It tracks the previous validator period, the delegation's amount of
 * staking token, and the creation height (to check later on if any slashes have
 * occurred). NOTE: Even though validators are slashed to whole staking tokens,
 * the delegators within the validator may be left with less than a full token,
 * thus sdk.Dec is used.
 *
 * Generated from protobuf message <code>cosmos.distribution.v1beta1.DelegatorStartingInfo</code>
 */
class DelegatorStartingInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint64 previous_period = 1 [json_name = "previousPeriod", (.gogoproto.moretags) = "yaml:\"previous_period\""];</code>
     */
    protected $previous_period = 0;
    /**
     * Generated from protobuf field <code>string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:\"stake\""];</code>
     */
    protected $stake = '';
    /**
     * Generated from protobuf field <code>uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.gogoproto.moretags) = "yaml:\"creation_height\""];</code>
     */
    protected $height = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $previous_period
     *     @type string $stake
     *     @type int|string $height
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Distribution\V1beta1\GPBMetadata\Distribution::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint64 previous_period = 1 [json_name = "previousPeriod", (.gogoproto.moretags) = "yaml:\"previous_period\""];</code>
     * @return int|string
     */
    public function getPreviousPeriod()
    {
        return $this->previous_period;
    }

    /**
     * Generated from protobuf field <code>uint64 previous_period = 1 [json_name = "previousPeriod", (.gogoproto.moretags) = "yaml:\"previous_period\""];</code>
     * @param int|string $var
     * @return $this
     */
    public function setPreviousPeriod($var)
    {
        GPBUtil::checkUint64($var);
        $this->previous_period = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:\"stake\""];</code>
     * @return string
     */
    public function getStake()
    {
        return $this->stake;
    }

    /**
     * Generated from protobuf field <code>string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:\"stake\""];</code>
     * @param string $var
     * @return $this
     */
    public function setStake($var)
    {
        GPBUtil::checkString($var, True);
        $this->stake = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.gogoproto.moretags) = "yaml:\"creation_height\""];</code>
     * @return int|string
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * Generated from protobuf field <code>uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.gogoproto.moretags) = "yaml:\"creation_height\""];</code>
     * @param int|string $var
     * @return $this
     */
    public function setHeight($var)
    {
        GPBUtil::checkUint64($var);
        $this->height = $var;

        return $this;
    }

}

