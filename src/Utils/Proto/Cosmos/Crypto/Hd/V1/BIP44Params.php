<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/crypto/hd/v1/hd.proto

namespace Cosmos\Crypto\Hd\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * BIP44Params is used as path field in ledger item in Record.
 *
 * Generated from protobuf message <code>cosmos.crypto.hd.v1.BIP44Params</code>
 */
class BIP44Params extends \Google\Protobuf\Internal\Message
{
    /**
     * purpose is a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
     *
     * Generated from protobuf field <code>uint32 purpose = 1 [json_name = "purpose"];</code>
     */
    protected $purpose = 0;
    /**
     * coin_type is a constant that improves privacy
     *
     * Generated from protobuf field <code>uint32 coin_type = 2 [json_name = "coinType"];</code>
     */
    protected $coin_type = 0;
    /**
     * account splits the key space into independent user identities
     *
     * Generated from protobuf field <code>uint32 account = 3 [json_name = "account"];</code>
     */
    protected $account = 0;
    /**
     * change is a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal
     * chain.
     *
     * Generated from protobuf field <code>bool change = 4 [json_name = "change"];</code>
     */
    protected $change = false;
    /**
     * address_index is used as child index in BIP32 derivation
     *
     * Generated from protobuf field <code>uint32 address_index = 5 [json_name = "addressIndex"];</code>
     */
    protected $address_index = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $purpose
     *           purpose is a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
     *     @type int $coin_type
     *           coin_type is a constant that improves privacy
     *     @type int $account
     *           account splits the key space into independent user identities
     *     @type bool $change
     *           change is a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal
     *           chain.
     *     @type int $address_index
     *           address_index is used as child index in BIP32 derivation
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Crypto\Hd\V1\Hd::initOnce();
        parent::__construct($data);
    }

    /**
     * purpose is a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
     *
     * Generated from protobuf field <code>uint32 purpose = 1 [json_name = "purpose"];</code>
     * @return int
     */
    public function getPurpose()
    {
        return $this->purpose;
    }

    /**
     * purpose is a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
     *
     * Generated from protobuf field <code>uint32 purpose = 1 [json_name = "purpose"];</code>
     * @param int $var
     * @return $this
     */
    public function setPurpose($var)
    {
        GPBUtil::checkUint32($var);
        $this->purpose = $var;

        return $this;
    }

    /**
     * coin_type is a constant that improves privacy
     *
     * Generated from protobuf field <code>uint32 coin_type = 2 [json_name = "coinType"];</code>
     * @return int
     */
    public function getCoinType()
    {
        return $this->coin_type;
    }

    /**
     * coin_type is a constant that improves privacy
     *
     * Generated from protobuf field <code>uint32 coin_type = 2 [json_name = "coinType"];</code>
     * @param int $var
     * @return $this
     */
    public function setCoinType($var)
    {
        GPBUtil::checkUint32($var);
        $this->coin_type = $var;

        return $this;
    }

    /**
     * account splits the key space into independent user identities
     *
     * Generated from protobuf field <code>uint32 account = 3 [json_name = "account"];</code>
     * @return int
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     * account splits the key space into independent user identities
     *
     * Generated from protobuf field <code>uint32 account = 3 [json_name = "account"];</code>
     * @param int $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkUint32($var);
        $this->account = $var;

        return $this;
    }

    /**
     * change is a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal
     * chain.
     *
     * Generated from protobuf field <code>bool change = 4 [json_name = "change"];</code>
     * @return bool
     */
    public function getChange()
    {
        return $this->change;
    }

    /**
     * change is a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal
     * chain.
     *
     * Generated from protobuf field <code>bool change = 4 [json_name = "change"];</code>
     * @param bool $var
     * @return $this
     */
    public function setChange($var)
    {
        GPBUtil::checkBool($var);
        $this->change = $var;

        return $this;
    }

    /**
     * address_index is used as child index in BIP32 derivation
     *
     * Generated from protobuf field <code>uint32 address_index = 5 [json_name = "addressIndex"];</code>
     * @return int
     */
    public function getAddressIndex()
    {
        return $this->address_index;
    }

    /**
     * address_index is used as child index in BIP32 derivation
     *
     * Generated from protobuf field <code>uint32 address_index = 5 [json_name = "addressIndex"];</code>
     * @param int $var
     * @return $this
     */
    public function setAddressIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->address_index = $var;

        return $this;
    }

}

