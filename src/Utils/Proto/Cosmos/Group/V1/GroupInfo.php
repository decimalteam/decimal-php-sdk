<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/group/v1/types.proto

namespace Cosmos\Group\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * GroupInfo represents the high-level on-chain information for a group.
 *
 * Generated from protobuf message <code>cosmos.group.v1.GroupInfo</code>
 */
class GroupInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * id is the unique ID of the group.
     *
     * Generated from protobuf field <code>uint64 id = 1 [json_name = "id"];</code>
     */
    protected $id = 0;
    /**
     * admin is the account address of the group's admin.
     *
     * Generated from protobuf field <code>string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $admin = '';
    /**
     * metadata is any arbitrary metadata to attached to the group.
     *
     * Generated from protobuf field <code>string metadata = 3 [json_name = "metadata"];</code>
     */
    protected $metadata = '';
    /**
     * version is used to track changes to a group's membership structure that
     * would break existing proposals. Whenever any members weight is changed,
     * or any member is added or removed this version is incremented and will
     * cause proposals based on older versions of this group to fail
     *
     * Generated from protobuf field <code>uint64 version = 4 [json_name = "version"];</code>
     */
    protected $version = 0;
    /**
     * total_weight is the sum of the group members' weights.
     *
     * Generated from protobuf field <code>string total_weight = 5 [json_name = "totalWeight"];</code>
     */
    protected $total_weight = '';
    /**
     * created_at is a timestamp specifying when a group was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $created_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *           id is the unique ID of the group.
     *     @type string $admin
     *           admin is the account address of the group's admin.
     *     @type string $metadata
     *           metadata is any arbitrary metadata to attached to the group.
     *     @type int|string $version
     *           version is used to track changes to a group's membership structure that
     *           would break existing proposals. Whenever any members weight is changed,
     *           or any member is added or removed this version is incremented and will
     *           cause proposals based on older versions of this group to fail
     *     @type string $total_weight
     *           total_weight is the sum of the group members' weights.
     *     @type \Google\Protobuf\Timestamp $created_at
     *           created_at is a timestamp specifying when a group was created.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Group\V1\Types::initOnce();
        parent::__construct($data);
    }

    /**
     * id is the unique ID of the group.
     *
     * Generated from protobuf field <code>uint64 id = 1 [json_name = "id"];</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id is the unique ID of the group.
     *
     * Generated from protobuf field <code>uint64 id = 1 [json_name = "id"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * admin is the account address of the group's admin.
     *
     * Generated from protobuf field <code>string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getAdmin()
    {
        return $this->admin;
    }

    /**
     * admin is the account address of the group's admin.
     *
     * Generated from protobuf field <code>string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setAdmin($var)
    {
        GPBUtil::checkString($var, True);
        $this->admin = $var;

        return $this;
    }

    /**
     * metadata is any arbitrary metadata to attached to the group.
     *
     * Generated from protobuf field <code>string metadata = 3 [json_name = "metadata"];</code>
     * @return string
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * metadata is any arbitrary metadata to attached to the group.
     *
     * Generated from protobuf field <code>string metadata = 3 [json_name = "metadata"];</code>
     * @param string $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkString($var, True);
        $this->metadata = $var;

        return $this;
    }

    /**
     * version is used to track changes to a group's membership structure that
     * would break existing proposals. Whenever any members weight is changed,
     * or any member is added or removed this version is incremented and will
     * cause proposals based on older versions of this group to fail
     *
     * Generated from protobuf field <code>uint64 version = 4 [json_name = "version"];</code>
     * @return int|string
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * version is used to track changes to a group's membership structure that
     * would break existing proposals. Whenever any members weight is changed,
     * or any member is added or removed this version is incremented and will
     * cause proposals based on older versions of this group to fail
     *
     * Generated from protobuf field <code>uint64 version = 4 [json_name = "version"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkUint64($var);
        $this->version = $var;

        return $this;
    }

    /**
     * total_weight is the sum of the group members' weights.
     *
     * Generated from protobuf field <code>string total_weight = 5 [json_name = "totalWeight"];</code>
     * @return string
     */
    public function getTotalWeight()
    {
        return $this->total_weight;
    }

    /**
     * total_weight is the sum of the group members' weights.
     *
     * Generated from protobuf field <code>string total_weight = 5 [json_name = "totalWeight"];</code>
     * @param string $var
     * @return $this
     */
    public function setTotalWeight($var)
    {
        GPBUtil::checkString($var, True);
        $this->total_weight = $var;

        return $this;
    }

    /**
     * created_at is a timestamp specifying when a group was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function hasCreatedAt()
    {
        return isset($this->created_at);
    }

    public function clearCreatedAt()
    {
        unset($this->created_at);
    }

    /**
     * created_at is a timestamp specifying when a group was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created_at = $var;

        return $this;
    }

}

