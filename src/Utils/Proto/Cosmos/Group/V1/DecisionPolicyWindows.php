<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/group/v1/types.proto

namespace Cosmos\Group\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DecisionPolicyWindows defines the different windows for voting and execution.
 *
 * Generated from protobuf message <code>cosmos.group.v1.DecisionPolicyWindows</code>
 */
class DecisionPolicyWindows extends \Google\Protobuf\Internal\Message
{
    /**
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $voting_period = null;
    /**
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $min_execution_period = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $voting_period
     *           voting_period is the duration from submission of a proposal to the end of voting period
     *           Within this times votes can be submitted with MsgVote.
     *     @type \Google\Protobuf\Duration $min_execution_period
     *           min_execution_period is the minimum duration after the proposal submission
     *           where members can start sending MsgExec. This means that the window for
     *           sending a MsgExec transaction is:
     *           `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     *           where max_execution_period is a app-specific config, defined in the keeper.
     *           If not set, min_execution_period will default to 0.
     *           Please make sure to set a `min_execution_period` that is smaller than
     *           `voting_period + max_execution_period`, or else the above execution window
     *           is empty, meaning that all proposals created with this decision policy
     *           won't be able to be executed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Group\V1\Types::initOnce();
        parent::__construct($data);
    }

    /**
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getVotingPeriod()
    {
        return $this->voting_period;
    }

    public function hasVotingPeriod()
    {
        return isset($this->voting_period);
    }

    public function clearVotingPeriod()
    {
        unset($this->voting_period);
    }

    /**
     * voting_period is the duration from submission of a proposal to the end of voting period
     * Within this times votes can be submitted with MsgVote.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setVotingPeriod($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->voting_period = $var;

        return $this;
    }

    /**
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMinExecutionPeriod()
    {
        return $this->min_execution_period;
    }

    public function hasMinExecutionPeriod()
    {
        return isset($this->min_execution_period);
    }

    public function clearMinExecutionPeriod()
    {
        unset($this->min_execution_period);
    }

    /**
     * min_execution_period is the minimum duration after the proposal submission
     * where members can start sending MsgExec. This means that the window for
     * sending a MsgExec transaction is:
     * `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
     * where max_execution_period is a app-specific config, defined in the keeper.
     * If not set, min_execution_period will default to 0.
     * Please make sure to set a `min_execution_period` that is smaller than
     * `voting_period + max_execution_period`, or else the above execution window
     * is empty, meaning that all proposals created with this decision policy
     * won't be able to be executed.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMinExecutionPeriod($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->min_execution_period = $var;

        return $this;
    }

}

