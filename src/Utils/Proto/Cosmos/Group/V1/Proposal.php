<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/group/v1/types.proto

namespace Cosmos\Group\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Proposal defines a group proposal. Any member of a group can submit a proposal
 * for a group policy to decide upon.
 * A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
 * passes as well as some optional metadata associated with the proposal.
 *
 * Generated from protobuf message <code>cosmos.group.v1.Proposal</code>
 */
class Proposal extends \Google\Protobuf\Internal\Message
{
    /**
     * id is the unique id of the proposal.
     *
     * Generated from protobuf field <code>uint64 id = 1 [json_name = "id"];</code>
     */
    protected $id = 0;
    /**
     * group_policy_address is the account address of group policy.
     *
     * Generated from protobuf field <code>string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $group_policy_address = '';
    /**
     * metadata is any arbitrary metadata to attached to the proposal.
     *
     * Generated from protobuf field <code>string metadata = 3 [json_name = "metadata"];</code>
     */
    protected $metadata = '';
    /**
     * proposers are the account addresses of the proposers.
     *
     * Generated from protobuf field <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    private $proposers;
    /**
     * submit_time is a timestamp specifying when a proposal was submitted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $submit_time = null;
    /**
     * group_version tracks the version of the group at proposal submission.
     * This field is here for informational purposes only.
     *
     * Generated from protobuf field <code>uint64 group_version = 6 [json_name = "groupVersion"];</code>
     */
    protected $group_version = 0;
    /**
     * group_policy_version tracks the version of the group policy at proposal submission.
     * When a decision policy is changed, existing proposals from previous policy
     * versions will become invalid with the `ABORTED` status.
     * This field is here for informational purposes only.
     *
     * Generated from protobuf field <code>uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];</code>
     */
    protected $group_policy_version = 0;
    /**
     * status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];</code>
     */
    protected $status = 0;
    /**
     * final_tally_result contains the sums of all weighted votes for this
     * proposal for each vote option. It is empty at submission, and only
     * populated after tallying, at voting period end or at proposal execution,
     * whichever happens first.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false];</code>
     */
    protected $final_tally_result = null;
    /**
     * voting_period_end is the timestamp before which voting must be done.
     * Unless a successfull MsgExec is called before (to execute a proposal whose
     * tally is successful before the voting period ends), tallying will be done
     * at this point, and the `final_tally_result`and `status` fields will be
     * accordingly updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $voting_period_end = null;
    /**
     * executor_result is the final result of the proposal execution. Initial value is NotRun.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];</code>
     */
    protected $executor_result = 0;
    /**
     * messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any messages = 12 [json_name = "messages"];</code>
     */
    private $messages;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *           id is the unique id of the proposal.
     *     @type string $group_policy_address
     *           group_policy_address is the account address of group policy.
     *     @type string $metadata
     *           metadata is any arbitrary metadata to attached to the proposal.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $proposers
     *           proposers are the account addresses of the proposers.
     *     @type \Google\Protobuf\Timestamp $submit_time
     *           submit_time is a timestamp specifying when a proposal was submitted.
     *     @type int|string $group_version
     *           group_version tracks the version of the group at proposal submission.
     *           This field is here for informational purposes only.
     *     @type int|string $group_policy_version
     *           group_policy_version tracks the version of the group policy at proposal submission.
     *           When a decision policy is changed, existing proposals from previous policy
     *           versions will become invalid with the `ABORTED` status.
     *           This field is here for informational purposes only.
     *     @type int $status
     *           status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
     *     @type \Cosmos\Group\V1\TallyResult $final_tally_result
     *           final_tally_result contains the sums of all weighted votes for this
     *           proposal for each vote option. It is empty at submission, and only
     *           populated after tallying, at voting period end or at proposal execution,
     *           whichever happens first.
     *     @type \Google\Protobuf\Timestamp $voting_period_end
     *           voting_period_end is the timestamp before which voting must be done.
     *           Unless a successfull MsgExec is called before (to execute a proposal whose
     *           tally is successful before the voting period ends), tallying will be done
     *           at this point, and the `final_tally_result`and `status` fields will be
     *           accordingly updated.
     *     @type int $executor_result
     *           executor_result is the final result of the proposal execution. Initial value is NotRun.
     *     @type \Google\Protobuf\Any[]|\Google\Protobuf\Internal\RepeatedField $messages
     *           messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Group\V1\Types::initOnce();
        parent::__construct($data);
    }

    /**
     * id is the unique id of the proposal.
     *
     * Generated from protobuf field <code>uint64 id = 1 [json_name = "id"];</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id is the unique id of the proposal.
     *
     * Generated from protobuf field <code>uint64 id = 1 [json_name = "id"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * group_policy_address is the account address of group policy.
     *
     * Generated from protobuf field <code>string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getGroupPolicyAddress()
    {
        return $this->group_policy_address;
    }

    /**
     * group_policy_address is the account address of group policy.
     *
     * Generated from protobuf field <code>string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setGroupPolicyAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->group_policy_address = $var;

        return $this;
    }

    /**
     * metadata is any arbitrary metadata to attached to the proposal.
     *
     * Generated from protobuf field <code>string metadata = 3 [json_name = "metadata"];</code>
     * @return string
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * metadata is any arbitrary metadata to attached to the proposal.
     *
     * Generated from protobuf field <code>string metadata = 3 [json_name = "metadata"];</code>
     * @param string $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkString($var, True);
        $this->metadata = $var;

        return $this;
    }

    /**
     * proposers are the account addresses of the proposers.
     *
     * Generated from protobuf field <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProposers()
    {
        return $this->proposers;
    }

    /**
     * proposers are the account addresses of the proposers.
     *
     * Generated from protobuf field <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProposers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->proposers = $arr;

        return $this;
    }

    /**
     * submit_time is a timestamp specifying when a proposal was submitted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getSubmitTime()
    {
        return $this->submit_time;
    }

    public function hasSubmitTime()
    {
        return isset($this->submit_time);
    }

    public function clearSubmitTime()
    {
        unset($this->submit_time);
    }

    /**
     * submit_time is a timestamp specifying when a proposal was submitted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setSubmitTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->submit_time = $var;

        return $this;
    }

    /**
     * group_version tracks the version of the group at proposal submission.
     * This field is here for informational purposes only.
     *
     * Generated from protobuf field <code>uint64 group_version = 6 [json_name = "groupVersion"];</code>
     * @return int|string
     */
    public function getGroupVersion()
    {
        return $this->group_version;
    }

    /**
     * group_version tracks the version of the group at proposal submission.
     * This field is here for informational purposes only.
     *
     * Generated from protobuf field <code>uint64 group_version = 6 [json_name = "groupVersion"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setGroupVersion($var)
    {
        GPBUtil::checkUint64($var);
        $this->group_version = $var;

        return $this;
    }

    /**
     * group_policy_version tracks the version of the group policy at proposal submission.
     * When a decision policy is changed, existing proposals from previous policy
     * versions will become invalid with the `ABORTED` status.
     * This field is here for informational purposes only.
     *
     * Generated from protobuf field <code>uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];</code>
     * @return int|string
     */
    public function getGroupPolicyVersion()
    {
        return $this->group_policy_version;
    }

    /**
     * group_policy_version tracks the version of the group policy at proposal submission.
     * When a decision policy is changed, existing proposals from previous policy
     * versions will become invalid with the `ABORTED` status.
     * This field is here for informational purposes only.
     *
     * Generated from protobuf field <code>uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setGroupPolicyVersion($var)
    {
        GPBUtil::checkUint64($var);
        $this->group_policy_version = $var;

        return $this;
    }

    /**
     * status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Cosmos\Group\V1\ProposalStatus::class);
        $this->status = $var;

        return $this;
    }

    /**
     * final_tally_result contains the sums of all weighted votes for this
     * proposal for each vote option. It is empty at submission, and only
     * populated after tallying, at voting period end or at proposal execution,
     * whichever happens first.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false];</code>
     * @return \Cosmos\Group\V1\TallyResult|null
     */
    public function getFinalTallyResult()
    {
        return $this->final_tally_result;
    }

    public function hasFinalTallyResult()
    {
        return isset($this->final_tally_result);
    }

    public function clearFinalTallyResult()
    {
        unset($this->final_tally_result);
    }

    /**
     * final_tally_result contains the sums of all weighted votes for this
     * proposal for each vote option. It is empty at submission, and only
     * populated after tallying, at voting period end or at proposal execution,
     * whichever happens first.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false];</code>
     * @param \Cosmos\Group\V1\TallyResult $var
     * @return $this
     */
    public function setFinalTallyResult($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Group\V1\TallyResult::class);
        $this->final_tally_result = $var;

        return $this;
    }

    /**
     * voting_period_end is the timestamp before which voting must be done.
     * Unless a successfull MsgExec is called before (to execute a proposal whose
     * tally is successful before the voting period ends), tallying will be done
     * at this point, and the `final_tally_result`and `status` fields will be
     * accordingly updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVotingPeriodEnd()
    {
        return $this->voting_period_end;
    }

    public function hasVotingPeriodEnd()
    {
        return isset($this->voting_period_end);
    }

    public function clearVotingPeriodEnd()
    {
        unset($this->voting_period_end);
    }

    /**
     * voting_period_end is the timestamp before which voting must be done.
     * Unless a successfull MsgExec is called before (to execute a proposal whose
     * tally is successful before the voting period ends), tallying will be done
     * at this point, and the `final_tally_result`and `status` fields will be
     * accordingly updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVotingPeriodEnd($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->voting_period_end = $var;

        return $this;
    }

    /**
     * executor_result is the final result of the proposal execution. Initial value is NotRun.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];</code>
     * @return int
     */
    public function getExecutorResult()
    {
        return $this->executor_result;
    }

    /**
     * executor_result is the final result of the proposal execution. Initial value is NotRun.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];</code>
     * @param int $var
     * @return $this
     */
    public function setExecutorResult($var)
    {
        GPBUtil::checkEnum($var, \Cosmos\Group\V1\ProposalExecutorResult::class);
        $this->executor_result = $var;

        return $this;
    }

    /**
     * messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any messages = 12 [json_name = "messages"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMessages()
    {
        return $this->messages;
    }

    /**
     * messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any messages = 12 [json_name = "messages"];</code>
     * @param \Google\Protobuf\Any[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMessages($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Any::class);
        $this->messages = $arr;

        return $this;
    }

}

