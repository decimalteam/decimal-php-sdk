<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/group/v1/types.proto

namespace Cosmos\Group\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ThresholdDecisionPolicy is a decision policy where a proposal passes when it
 * satisfies the two following conditions:
 * 1. The sum of all `YES` voters' weights is greater or equal than the defined
 *    `threshold`.
 * 2. The voting and execution periods of the proposal respect the parameters
 *    given by `windows`.
 *
 * Generated from protobuf message <code>cosmos.group.v1.ThresholdDecisionPolicy</code>
 */
class ThresholdDecisionPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * threshold is the minimum weighted sum of `YES` votes that must be met or
     * exceeded for a proposal to succeed.
     *
     * Generated from protobuf field <code>string threshold = 1 [json_name = "threshold"];</code>
     */
    protected $threshold = '';
    /**
     * windows defines the different windows for voting and execution.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];</code>
     */
    protected $windows = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $threshold
     *           threshold is the minimum weighted sum of `YES` votes that must be met or
     *           exceeded for a proposal to succeed.
     *     @type \Cosmos\Group\V1\DecisionPolicyWindows $windows
     *           windows defines the different windows for voting and execution.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Group\V1\Types::initOnce();
        parent::__construct($data);
    }

    /**
     * threshold is the minimum weighted sum of `YES` votes that must be met or
     * exceeded for a proposal to succeed.
     *
     * Generated from protobuf field <code>string threshold = 1 [json_name = "threshold"];</code>
     * @return string
     */
    public function getThreshold()
    {
        return $this->threshold;
    }

    /**
     * threshold is the minimum weighted sum of `YES` votes that must be met or
     * exceeded for a proposal to succeed.
     *
     * Generated from protobuf field <code>string threshold = 1 [json_name = "threshold"];</code>
     * @param string $var
     * @return $this
     */
    public function setThreshold($var)
    {
        GPBUtil::checkString($var, True);
        $this->threshold = $var;

        return $this;
    }

    /**
     * windows defines the different windows for voting and execution.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];</code>
     * @return \Cosmos\Group\V1\DecisionPolicyWindows|null
     */
    public function getWindows()
    {
        return $this->windows;
    }

    public function hasWindows()
    {
        return isset($this->windows);
    }

    public function clearWindows()
    {
        unset($this->windows);
    }

    /**
     * windows defines the different windows for voting and execution.
     *
     * Generated from protobuf field <code>.cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];</code>
     * @param \Cosmos\Group\V1\DecisionPolicyWindows $var
     * @return $this
     */
    public function setWindows($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Group\V1\DecisionPolicyWindows::class);
        $this->windows = $var;

        return $this;
    }

}

