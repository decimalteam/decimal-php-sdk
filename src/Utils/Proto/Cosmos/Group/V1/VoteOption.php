<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/group/v1/types.proto

namespace Cosmos\Group\V1;

use UnexpectedValueException;

/**
 * VoteOption enumerates the valid vote options for a given proposal.
 *
 * Protobuf type <code>cosmos.group.v1.VoteOption</code>
 */
class VoteOption
{
    /**
     * VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
     * return an error.
     *
     * Generated from protobuf enum <code>VOTE_OPTION_UNSPECIFIED = 0;</code>
     */
    const VOTE_OPTION_UNSPECIFIED = 0;
    /**
     * VOTE_OPTION_YES defines a yes vote option.
     *
     * Generated from protobuf enum <code>VOTE_OPTION_YES = 1;</code>
     */
    const VOTE_OPTION_YES = 1;
    /**
     * VOTE_OPTION_ABSTAIN defines an abstain vote option.
     *
     * Generated from protobuf enum <code>VOTE_OPTION_ABSTAIN = 2;</code>
     */
    const VOTE_OPTION_ABSTAIN = 2;
    /**
     * VOTE_OPTION_NO defines a no vote option.
     *
     * Generated from protobuf enum <code>VOTE_OPTION_NO = 3;</code>
     */
    const VOTE_OPTION_NO = 3;
    /**
     * VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
     *
     * Generated from protobuf enum <code>VOTE_OPTION_NO_WITH_VETO = 4;</code>
     */
    const VOTE_OPTION_NO_WITH_VETO = 4;

    private static $valueToName = [
        self::VOTE_OPTION_UNSPECIFIED => 'VOTE_OPTION_UNSPECIFIED',
        self::VOTE_OPTION_YES => 'VOTE_OPTION_YES',
        self::VOTE_OPTION_ABSTAIN => 'VOTE_OPTION_ABSTAIN',
        self::VOTE_OPTION_NO => 'VOTE_OPTION_NO',
        self::VOTE_OPTION_NO_WITH_VETO => 'VOTE_OPTION_NO_WITH_VETO',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

