<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/bank/v1beta1/bank.proto

namespace Cosmos\Bank\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Metadata represents a struct that describes
 * a basic token.
 *
 * Generated from protobuf message <code>cosmos.bank.v1beta1.Metadata</code>
 */
class Metadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string description = 1 [json_name = "description"];</code>
     */
    protected $description = '';
    /**
     * denom_units represents the list of DenomUnit's for a given coin
     *
     * Generated from protobuf field <code>repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];</code>
     */
    private $denom_units;
    /**
     * base represents the base denom (should be the DenomUnit with exponent = 0).
     *
     * Generated from protobuf field <code>string base = 3 [json_name = "base"];</code>
     */
    protected $base = '';
    /**
     * display indicates the suggested denom that should be
     * displayed in clients.
     *
     * Generated from protobuf field <code>string display = 4 [json_name = "display"];</code>
     */
    protected $display = '';
    /**
     * name defines the name of the token (eg: Cosmos Atom)
     *
     * Generated from protobuf field <code>string name = 5 [json_name = "name"];</code>
     */
    protected $name = '';
    /**
     * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
     * be the same as the display.
     *
     * Generated from protobuf field <code>string symbol = 6 [json_name = "symbol"];</code>
     */
    protected $symbol = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $description
     *     @type array<\Cosmos\Bank\V1beta1\DenomUnit>|\Google\Protobuf\Internal\RepeatedField $denom_units
     *           denom_units represents the list of DenomUnit's for a given coin
     *     @type string $base
     *           base represents the base denom (should be the DenomUnit with exponent = 0).
     *     @type string $display
     *           display indicates the suggested denom that should be
     *           displayed in clients.
     *     @type string $name
     *           name defines the name of the token (eg: Cosmos Atom)
     *     @type string $symbol
     *           symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
     *           be the same as the display.
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Bank\V1beta1\GPBMetadata\Bank::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string description = 1 [json_name = "description"];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 1 [json_name = "description"];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * denom_units represents the list of DenomUnit's for a given coin
     *
     * Generated from protobuf field <code>repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDenomUnits()
    {
        return $this->denom_units;
    }

    /**
     * denom_units represents the list of DenomUnit's for a given coin
     *
     * Generated from protobuf field <code>repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];</code>
     * @param array<\Cosmos\Bank\V1beta1\DenomUnit>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDenomUnits($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Bank\V1beta1\DenomUnit::class);
        $this->denom_units = $arr;

        return $this;
    }

    /**
     * base represents the base denom (should be the DenomUnit with exponent = 0).
     *
     * Generated from protobuf field <code>string base = 3 [json_name = "base"];</code>
     * @return string
     */
    public function getBase()
    {
        return $this->base;
    }

    /**
     * base represents the base denom (should be the DenomUnit with exponent = 0).
     *
     * Generated from protobuf field <code>string base = 3 [json_name = "base"];</code>
     * @param string $var
     * @return $this
     */
    public function setBase($var)
    {
        GPBUtil::checkString($var, True);
        $this->base = $var;

        return $this;
    }

    /**
     * display indicates the suggested denom that should be
     * displayed in clients.
     *
     * Generated from protobuf field <code>string display = 4 [json_name = "display"];</code>
     * @return string
     */
    public function getDisplay()
    {
        return $this->display;
    }

    /**
     * display indicates the suggested denom that should be
     * displayed in clients.
     *
     * Generated from protobuf field <code>string display = 4 [json_name = "display"];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplay($var)
    {
        GPBUtil::checkString($var, True);
        $this->display = $var;

        return $this;
    }

    /**
     * name defines the name of the token (eg: Cosmos Atom)
     *
     * Generated from protobuf field <code>string name = 5 [json_name = "name"];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * name defines the name of the token (eg: Cosmos Atom)
     *
     * Generated from protobuf field <code>string name = 5 [json_name = "name"];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
     * be the same as the display.
     *
     * Generated from protobuf field <code>string symbol = 6 [json_name = "symbol"];</code>
     * @return string
     */
    public function getSymbol()
    {
        return $this->symbol;
    }

    /**
     * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
     * be the same as the display.
     *
     * Generated from protobuf field <code>string symbol = 6 [json_name = "symbol"];</code>
     * @param string $var
     * @return $this
     */
    public function setSymbol($var)
    {
        GPBUtil::checkString($var, True);
        $this->symbol = $var;

        return $this;
    }

}

