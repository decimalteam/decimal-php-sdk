<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/bank/v1beta1/query.proto

namespace Cosmos\Bank\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DenomOwner defines structure representing an account that owns or holds a
 * particular denominated token. It contains the account address and account
 * balance of the denominated token.
 * Since: cosmos-sdk 0.46
 *
 * Generated from protobuf message <code>cosmos.bank.v1beta1.DenomOwner</code>
 */
class DenomOwner extends \Google\Protobuf\Internal\Message
{
    /**
     * address defines the address that owns a particular denomination.
     *
     * Generated from protobuf field <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $address = '';
    /**
     * balance is the balance of the denominated coin for an account.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false];</code>
     */
    protected $balance = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $address
     *           address defines the address that owns a particular denomination.
     *     @type \Cosmos\Base\V1beta1\Coin $balance
     *           balance is the balance of the denominated coin for an account.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Bank\V1Beta1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * address defines the address that owns a particular denomination.
     *
     * Generated from protobuf field <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * address defines the address that owns a particular denomination.
     *
     * Generated from protobuf field <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * balance is the balance of the denominated coin for an account.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false];</code>
     * @return \Cosmos\Base\V1beta1\Coin|null
     */
    public function getBalance()
    {
        return $this->balance;
    }

    public function hasBalance()
    {
        return isset($this->balance);
    }

    public function clearBalance()
    {
        unset($this->balance);
    }

    /**
     * balance is the balance of the denominated coin for an account.
     *
     * Generated from protobuf field <code>.cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false];</code>
     * @param \Cosmos\Base\V1beta1\Coin $var
     * @return $this
     */
    public function setBalance($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Base\V1beta1\Coin::class);
        $this->balance = $var;

        return $this;
    }

}

