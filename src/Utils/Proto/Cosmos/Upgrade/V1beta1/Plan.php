<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/upgrade/v1beta1/upgrade.proto

namespace Cosmos\Upgrade\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Plan specifies information about a planned upgrade and when it should occur.
 *
 * Generated from protobuf message <code>cosmos.upgrade.v1beta1.Plan</code>
 */
class Plan extends \Google\Protobuf\Internal\Message
{
    /**
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     *
     * Generated from protobuf field <code>string name = 1 [json_name = "name"];</code>
     */
    protected $name = '';
    /**
     * Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
     * has been removed from the SDK.
     * If this field is not empty, an error will be thrown.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @deprecated
     */
    protected $time = null;
    /**
     * The height at which the upgrade must be performed.
     * Only used if Time is not set.
     *
     * Generated from protobuf field <code>int64 height = 3 [json_name = "height"];</code>
     */
    protected $height = 0;
    /**
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     *
     * Generated from protobuf field <code>string info = 4 [json_name = "info"];</code>
     */
    protected $info = '';
    /**
     * Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
     * moved to the IBC module in the sub module 02-client.
     * If this field is not empty, an error will be thrown.
     *
     * Generated from protobuf field <code>.google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true, (.gogoproto.moretags) = "yaml:\"upgraded_client_state\""];</code>
     * @deprecated
     */
    protected $upgraded_client_state = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Sets the name for the upgrade. This name will be used by the upgraded
     *           version of the software to apply any special "on-upgrade" commands during
     *           the first BeginBlock method after the upgrade is applied. It is also used
     *           to detect whether a software version can handle a given upgrade. If no
     *           upgrade handler with this name has been set in the software, it will be
     *           assumed that the software is out-of-date when the upgrade Time or Height is
     *           reached and the software will exit.
     *     @type \Google\Protobuf\Timestamp $time
     *           Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
     *           has been removed from the SDK.
     *           If this field is not empty, an error will be thrown.
     *     @type int|string $height
     *           The height at which the upgrade must be performed.
     *           Only used if Time is not set.
     *     @type string $info
     *           Any application specific upgrade info to be included on-chain
     *           such as a git commit that validators could automatically upgrade to
     *     @type \Google\Protobuf\Any $upgraded_client_state
     *           Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
     *           moved to the IBC module in the sub module 02-client.
     *           If this field is not empty, an error will be thrown.
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Upgrade\V1beta1\GPBMetadata\Upgrade::initOnce();
        parent::__construct($data);
    }

    /**
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     *
     * Generated from protobuf field <code>string name = 1 [json_name = "name"];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets the name for the upgrade. This name will be used by the upgraded
     * version of the software to apply any special "on-upgrade" commands during
     * the first BeginBlock method after the upgrade is applied. It is also used
     * to detect whether a software version can handle a given upgrade. If no
     * upgrade handler with this name has been set in the software, it will be
     * assumed that the software is out-of-date when the upgrade Time or Height is
     * reached and the software will exit.
     *
     * Generated from protobuf field <code>string name = 1 [json_name = "name"];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
     * has been removed from the SDK.
     * If this field is not empty, an error will be thrown.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     * @deprecated
     */
    public function getTime()
    {
        @trigger_error('time is deprecated.', E_USER_DEPRECATED);
        return $this->time;
    }

    public function hasTime()
    {
        @trigger_error('time is deprecated.', E_USER_DEPRECATED);
        return isset($this->time);
    }

    public function clearTime()
    {
        @trigger_error('time is deprecated.', E_USER_DEPRECATED);
        unset($this->time);
    }

    /**
     * Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
     * has been removed from the SDK.
     * If this field is not empty, an error will be thrown.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     * @deprecated
     */
    public function setTime($var)
    {
        @trigger_error('time is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time = $var;

        return $this;
    }

    /**
     * The height at which the upgrade must be performed.
     * Only used if Time is not set.
     *
     * Generated from protobuf field <code>int64 height = 3 [json_name = "height"];</code>
     * @return int|string
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * The height at which the upgrade must be performed.
     * Only used if Time is not set.
     *
     * Generated from protobuf field <code>int64 height = 3 [json_name = "height"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setHeight($var)
    {
        GPBUtil::checkInt64($var);
        $this->height = $var;

        return $this;
    }

    /**
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     *
     * Generated from protobuf field <code>string info = 4 [json_name = "info"];</code>
     * @return string
     */
    public function getInfo()
    {
        return $this->info;
    }

    /**
     * Any application specific upgrade info to be included on-chain
     * such as a git commit that validators could automatically upgrade to
     *
     * Generated from protobuf field <code>string info = 4 [json_name = "info"];</code>
     * @param string $var
     * @return $this
     */
    public function setInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->info = $var;

        return $this;
    }

    /**
     * Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
     * moved to the IBC module in the sub module 02-client.
     * If this field is not empty, an error will be thrown.
     *
     * Generated from protobuf field <code>.google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true, (.gogoproto.moretags) = "yaml:\"upgraded_client_state\""];</code>
     * @return \Google\Protobuf\Any|null
     * @deprecated
     */
    public function getUpgradedClientState()
    {
        @trigger_error('upgraded_client_state is deprecated.', E_USER_DEPRECATED);
        return $this->upgraded_client_state;
    }

    public function hasUpgradedClientState()
    {
        @trigger_error('upgraded_client_state is deprecated.', E_USER_DEPRECATED);
        return isset($this->upgraded_client_state);
    }

    public function clearUpgradedClientState()
    {
        @trigger_error('upgraded_client_state is deprecated.', E_USER_DEPRECATED);
        unset($this->upgraded_client_state);
    }

    /**
     * Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
     * moved to the IBC module in the sub module 02-client.
     * If this field is not empty, an error will be thrown.
     *
     * Generated from protobuf field <code>.google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true, (.gogoproto.moretags) = "yaml:\"upgraded_client_state\""];</code>
     * @param \Google\Protobuf\Any $var
     * @return $this
     * @deprecated
     */
    public function setUpgradedClientState($var)
    {
        @trigger_error('upgraded_client_state is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Google\Protobuf\Any::class);
        $this->upgraded_client_state = $var;

        return $this;
    }

}

