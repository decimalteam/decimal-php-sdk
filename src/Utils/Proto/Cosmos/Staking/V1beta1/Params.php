<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/staking/v1beta1/staking.proto

namespace Cosmos\Staking\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Params defines the parameters for the staking module.
 *
 * Generated from protobuf message <code>cosmos.staking.v1beta1.Params</code>
 */
class Params extends \Google\Protobuf\Internal\Message
{
    /**
     * unbonding_time is the time duration of unbonding.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $unbonding_time = null;
    /**
     * max_validators is the maximum number of validators.
     *
     * Generated from protobuf field <code>uint32 max_validators = 2 [json_name = "maxValidators"];</code>
     */
    protected $max_validators = 0;
    /**
     * max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
     *
     * Generated from protobuf field <code>uint32 max_entries = 3 [json_name = "maxEntries"];</code>
     */
    protected $max_entries = 0;
    /**
     * historical_entries is the number of historical entries to persist.
     *
     * Generated from protobuf field <code>uint32 historical_entries = 4 [json_name = "historicalEntries"];</code>
     */
    protected $historical_entries = 0;
    /**
     * bond_denom defines the bondable coin denomination.
     *
     * Generated from protobuf field <code>string bond_denom = 5 [json_name = "bondDenom"];</code>
     */
    protected $bond_denom = '';
    /**
     * min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
     *
     * Generated from protobuf field <code>string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\""];</code>
     */
    protected $min_commission_rate = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $unbonding_time
     *           unbonding_time is the time duration of unbonding.
     *     @type int $max_validators
     *           max_validators is the maximum number of validators.
     *     @type int $max_entries
     *           max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
     *     @type int $historical_entries
     *           historical_entries is the number of historical entries to persist.
     *     @type string $bond_denom
     *           bond_denom defines the bondable coin denomination.
     *     @type string $min_commission_rate
     *           min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Staking\V1Beta1\Staking::initOnce();
        parent::__construct($data);
    }

    /**
     * unbonding_time is the time duration of unbonding.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getUnbondingTime()
    {
        return $this->unbonding_time;
    }

    public function hasUnbondingTime()
    {
        return isset($this->unbonding_time);
    }

    public function clearUnbondingTime()
    {
        unset($this->unbonding_time);
    }

    /**
     * unbonding_time is the time duration of unbonding.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setUnbondingTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->unbonding_time = $var;

        return $this;
    }

    /**
     * max_validators is the maximum number of validators.
     *
     * Generated from protobuf field <code>uint32 max_validators = 2 [json_name = "maxValidators"];</code>
     * @return int
     */
    public function getMaxValidators()
    {
        return $this->max_validators;
    }

    /**
     * max_validators is the maximum number of validators.
     *
     * Generated from protobuf field <code>uint32 max_validators = 2 [json_name = "maxValidators"];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxValidators($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_validators = $var;

        return $this;
    }

    /**
     * max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
     *
     * Generated from protobuf field <code>uint32 max_entries = 3 [json_name = "maxEntries"];</code>
     * @return int
     */
    public function getMaxEntries()
    {
        return $this->max_entries;
    }

    /**
     * max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
     *
     * Generated from protobuf field <code>uint32 max_entries = 3 [json_name = "maxEntries"];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxEntries($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_entries = $var;

        return $this;
    }

    /**
     * historical_entries is the number of historical entries to persist.
     *
     * Generated from protobuf field <code>uint32 historical_entries = 4 [json_name = "historicalEntries"];</code>
     * @return int
     */
    public function getHistoricalEntries()
    {
        return $this->historical_entries;
    }

    /**
     * historical_entries is the number of historical entries to persist.
     *
     * Generated from protobuf field <code>uint32 historical_entries = 4 [json_name = "historicalEntries"];</code>
     * @param int $var
     * @return $this
     */
    public function setHistoricalEntries($var)
    {
        GPBUtil::checkUint32($var);
        $this->historical_entries = $var;

        return $this;
    }

    /**
     * bond_denom defines the bondable coin denomination.
     *
     * Generated from protobuf field <code>string bond_denom = 5 [json_name = "bondDenom"];</code>
     * @return string
     */
    public function getBondDenom()
    {
        return $this->bond_denom;
    }

    /**
     * bond_denom defines the bondable coin denomination.
     *
     * Generated from protobuf field <code>string bond_denom = 5 [json_name = "bondDenom"];</code>
     * @param string $var
     * @return $this
     */
    public function setBondDenom($var)
    {
        GPBUtil::checkString($var, True);
        $this->bond_denom = $var;

        return $this;
    }

    /**
     * min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
     *
     * Generated from protobuf field <code>string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\""];</code>
     * @return string
     */
    public function getMinCommissionRate()
    {
        return $this->min_commission_rate;
    }

    /**
     * min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators
     *
     * Generated from protobuf field <code>string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\""];</code>
     * @param string $var
     * @return $this
     */
    public function setMinCommissionRate($var)
    {
        GPBUtil::checkString($var, True);
        $this->min_commission_rate = $var;

        return $this;
    }

}

