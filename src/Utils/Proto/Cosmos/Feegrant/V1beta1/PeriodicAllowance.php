<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/feegrant/v1beta1/feegrant.proto

namespace Cosmos\Feegrant\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PeriodicAllowance extends Allowance to allow for both a maximum cap,
 * as well as a limit per time period.
 *
 * Generated from protobuf message <code>cosmos.feegrant.v1beta1.PeriodicAllowance</code>
 */
class PeriodicAllowance extends \Google\Protobuf\Internal\Message
{
    /**
     * basic specifies a struct of `BasicAllowance`
     *
     * Generated from protobuf field <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false];</code>
     */
    protected $basic = null;
    /**
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     *
     * Generated from protobuf field <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    protected $period = null;
    /**
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    private $period_spend_limit;
    /**
     * period_can_spend is the number of coins left to be spent before the period_reset time
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    private $period_can_spend;
    /**
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    protected $period_reset = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cosmos\Feegrant\V1beta1\BasicAllowance $basic
     *           basic specifies a struct of `BasicAllowance`
     *     @type \Google\Protobuf\Duration $period
     *           period specifies the time duration in which period_spend_limit coins can
     *           be spent before that allowance is reset
     *     @type array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $period_spend_limit
     *           period_spend_limit specifies the maximum number of coins that can be spent
     *           in the period
     *     @type array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $period_can_spend
     *           period_can_spend is the number of coins left to be spent before the period_reset time
     *     @type \Google\Protobuf\Timestamp $period_reset
     *           period_reset is the time at which this period resets and a new one begins,
     *           it is calculated from the start time of the first transaction after the
     *           last period ended
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Feegrant\V1beta1\GPBMetadata\Feegrant::initOnce();
        parent::__construct($data);
    }

    /**
     * basic specifies a struct of `BasicAllowance`
     *
     * Generated from protobuf field <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false];</code>
     * @return \Cosmos\Feegrant\V1beta1\BasicAllowance|null
     */
    public function getBasic()
    {
        return $this->basic;
    }

    public function hasBasic()
    {
        return isset($this->basic);
    }

    public function clearBasic()
    {
        unset($this->basic);
    }

    /**
     * basic specifies a struct of `BasicAllowance`
     *
     * Generated from protobuf field <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false];</code>
     * @param \Cosmos\Feegrant\V1beta1\BasicAllowance $var
     * @return $this
     */
    public function setBasic($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Feegrant\V1beta1\BasicAllowance::class);
        $this->basic = $var;

        return $this;
    }

    /**
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     *
     * Generated from protobuf field <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getPeriod()
    {
        return $this->period;
    }

    public function hasPeriod()
    {
        return isset($this->period);
    }

    public function clearPeriod()
    {
        unset($this->period);
    }

    /**
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     *
     * Generated from protobuf field <code>.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setPeriod($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->period = $var;

        return $this;
    }

    /**
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPeriodSpendLimit()
    {
        return $this->period_spend_limit;
    }

    /**
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPeriodSpendLimit($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Base\V1beta1\Coin::class);
        $this->period_spend_limit = $arr;

        return $this;
    }

    /**
     * period_can_spend is the number of coins left to be spent before the period_reset time
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPeriodCanSpend()
    {
        return $this->period_can_spend;
    }

    /**
     * period_can_spend is the number of coins left to be spent before the period_reset time
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPeriodCanSpend($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Base\V1beta1\Coin::class);
        $this->period_can_spend = $arr;

        return $this;
    }

    /**
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPeriodReset()
    {
        return $this->period_reset;
    }

    public function hasPeriodReset()
    {
        return isset($this->period_reset);
    }

    public function clearPeriodReset()
    {
        unset($this->period_reset);
    }

    /**
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPeriodReset($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->period_reset = $var;

        return $this;
    }

}

