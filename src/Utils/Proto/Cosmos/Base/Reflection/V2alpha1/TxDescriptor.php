<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/base/reflection/v2alpha1/reflection.proto

namespace Cosmos\Base\Reflection\V2alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TxDescriptor describes the accepted transaction type
 *
 * Generated from protobuf message <code>cosmos.base.reflection.v2alpha1.TxDescriptor</code>
 */
class TxDescriptor extends \Google\Protobuf\Internal\Message
{
    /**
     * fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
     * it is not meant to support polymorphism of transaction types, it is supposed to be used by
     * reflection clients to understand if they can handle a specific transaction type in an application.
     *
     * Generated from protobuf field <code>string fullname = 1 [json_name = "fullname"];</code>
     */
    protected $fullname = '';
    /**
     * msgs lists the accepted application messages (sdk.Msg)
     *
     * Generated from protobuf field <code>repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];</code>
     */
    private $msgs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $fullname
     *           fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
     *           it is not meant to support polymorphism of transaction types, it is supposed to be used by
     *           reflection clients to understand if they can handle a specific transaction type in an application.
     *     @type array<\Cosmos\Base\Reflection\V2alpha1\MsgDescriptor>|\Google\Protobuf\Internal\RepeatedField $msgs
     *           msgs lists the accepted application messages (sdk.Msg)
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Base\Reflection\V2alpha1\GPBMetadata\Reflection::initOnce();
        parent::__construct($data);
    }

    /**
     * fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
     * it is not meant to support polymorphism of transaction types, it is supposed to be used by
     * reflection clients to understand if they can handle a specific transaction type in an application.
     *
     * Generated from protobuf field <code>string fullname = 1 [json_name = "fullname"];</code>
     * @return string
     */
    public function getFullname()
    {
        return $this->fullname;
    }

    /**
     * fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
     * it is not meant to support polymorphism of transaction types, it is supposed to be used by
     * reflection clients to understand if they can handle a specific transaction type in an application.
     *
     * Generated from protobuf field <code>string fullname = 1 [json_name = "fullname"];</code>
     * @param string $var
     * @return $this
     */
    public function setFullname($var)
    {
        GPBUtil::checkString($var, True);
        $this->fullname = $var;

        return $this;
    }

    /**
     * msgs lists the accepted application messages (sdk.Msg)
     *
     * Generated from protobuf field <code>repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMsgs()
    {
        return $this->msgs;
    }

    /**
     * msgs lists the accepted application messages (sdk.Msg)
     *
     * Generated from protobuf field <code>repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];</code>
     * @param array<\Cosmos\Base\Reflection\V2alpha1\MsgDescriptor>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMsgs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Base\Reflection\V2alpha1\MsgDescriptor::class);
        $this->msgs = $arr;

        return $this;
    }

}

