<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/base/reflection/v2alpha1/reflection.proto

namespace Cosmos\Base\Reflection\V2alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * InterfaceImplementerDescriptor describes an interface implementer
 *
 * Generated from protobuf message <code>cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor</code>
 */
class InterfaceImplementerDescriptor extends \Google\Protobuf\Internal\Message
{
    /**
     * fullname is the protobuf queryable name of the interface implementer
     *
     * Generated from protobuf field <code>string fullname = 1 [json_name = "fullname"];</code>
     */
    protected $fullname = '';
    /**
     * type_url defines the type URL used when marshalling the type as any
     * this is required so we can provide type safe google.protobuf.Any marshalling and
     * unmarshalling, making sure that we don't accept just 'any' type
     * in our interface fields
     *
     * Generated from protobuf field <code>string type_url = 2 [json_name = "typeUrl"];</code>
     */
    protected $type_url = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $fullname
     *           fullname is the protobuf queryable name of the interface implementer
     *     @type string $type_url
     *           type_url defines the type URL used when marshalling the type as any
     *           this is required so we can provide type safe google.protobuf.Any marshalling and
     *           unmarshalling, making sure that we don't accept just 'any' type
     *           in our interface fields
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Base\Reflection\V2alpha1\GPBMetadata\Reflection::initOnce();
        parent::__construct($data);
    }

    /**
     * fullname is the protobuf queryable name of the interface implementer
     *
     * Generated from protobuf field <code>string fullname = 1 [json_name = "fullname"];</code>
     * @return string
     */
    public function getFullname()
    {
        return $this->fullname;
    }

    /**
     * fullname is the protobuf queryable name of the interface implementer
     *
     * Generated from protobuf field <code>string fullname = 1 [json_name = "fullname"];</code>
     * @param string $var
     * @return $this
     */
    public function setFullname($var)
    {
        GPBUtil::checkString($var, True);
        $this->fullname = $var;

        return $this;
    }

    /**
     * type_url defines the type URL used when marshalling the type as any
     * this is required so we can provide type safe google.protobuf.Any marshalling and
     * unmarshalling, making sure that we don't accept just 'any' type
     * in our interface fields
     *
     * Generated from protobuf field <code>string type_url = 2 [json_name = "typeUrl"];</code>
     * @return string
     */
    public function getTypeUrl()
    {
        return $this->type_url;
    }

    /**
     * type_url defines the type URL used when marshalling the type as any
     * this is required so we can provide type safe google.protobuf.Any marshalling and
     * unmarshalling, making sure that we don't accept just 'any' type
     * in our interface fields
     *
     * Generated from protobuf field <code>string type_url = 2 [json_name = "typeUrl"];</code>
     * @param string $var
     * @return $this
     */
    public function setTypeUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->type_url = $var;

        return $this;
    }

}

