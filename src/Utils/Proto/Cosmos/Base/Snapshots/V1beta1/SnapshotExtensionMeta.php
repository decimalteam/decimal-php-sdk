<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/base/snapshots/v1beta1/snapshot.proto

namespace Cosmos\Base\Snapshots\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * SnapshotExtensionMeta contains metadata about an external snapshotter.
 * Since: cosmos-sdk 0.46
 *
 * Generated from protobuf message <code>cosmos.base.snapshots.v1beta1.SnapshotExtensionMeta</code>
 */
class SnapshotExtensionMeta extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1 [json_name = "name"];</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>uint32 format = 2 [json_name = "format"];</code>
     */
    protected $format = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type int $format
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Base\Snapshots\V1Beta1\Snapshot::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1 [json_name = "name"];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1 [json_name = "name"];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 format = 2 [json_name = "format"];</code>
     * @return int
     */
    public function getFormat()
    {
        return $this->format;
    }

    /**
     * Generated from protobuf field <code>uint32 format = 2 [json_name = "format"];</code>
     * @param int $var
     * @return $this
     */
    public function setFormat($var)
    {
        GPBUtil::checkUint32($var);
        $this->format = $var;

        return $this;
    }

}

