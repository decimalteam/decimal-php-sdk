<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/signing/v1beta1/signing.proto

namespace Cosmos\Tx\Signing\V1beta1\SignatureDescriptor\Data;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Single is the signature data for a single signer
 *
 * Generated from protobuf message <code>cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single</code>
 */
class Single extends \Google\Protobuf\Internal\Message
{
    /**
     * mode is the signing mode of the single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1 [json_name = "mode"];</code>
     */
    protected $mode = 0;
    /**
     * signature is the raw signature bytes
     *
     * Generated from protobuf field <code>bytes signature = 2 [json_name = "signature"];</code>
     */
    protected $signature = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $mode
     *           mode is the signing mode of the single signer
     *     @type string $signature
     *           signature is the raw signature bytes
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Tx\Signing\V1Beta1\Signing::initOnce();
        parent::__construct($data);
    }

    /**
     * mode is the signing mode of the single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1 [json_name = "mode"];</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * mode is the signing mode of the single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1 [json_name = "mode"];</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, \Cosmos\Tx\Signing\V1beta1\SignMode::class);
        $this->mode = $var;

        return $this;
    }

    /**
     * signature is the raw signature bytes
     *
     * Generated from protobuf field <code>bytes signature = 2 [json_name = "signature"];</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * signature is the raw signature bytes
     *
     * Generated from protobuf field <code>bytes signature = 2 [json_name = "signature"];</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, False);
        $this->signature = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Single::class, \Cosmos\Tx\Signing\V1beta1\SignatureDescriptor_Data_Single::class);

