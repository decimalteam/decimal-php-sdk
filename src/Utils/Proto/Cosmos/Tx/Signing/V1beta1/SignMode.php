<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/signing/v1beta1/signing.proto

namespace Cosmos\Tx\Signing\V1beta1;

use UnexpectedValueException;

/**
 * SignMode represents a signing mode with its own security guarantees.
 *
 * Protobuf type <code>cosmos.tx.signing.v1beta1.SignMode</code>
 */
class SignMode
{
    /**
     * SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
     * rejected
     *
     * Generated from protobuf enum <code>SIGN_MODE_UNSPECIFIED = 0;</code>
     */
    const SIGN_MODE_UNSPECIFIED = 0;
    /**
     * SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
     * verified with raw bytes from Tx
     *
     * Generated from protobuf enum <code>SIGN_MODE_DIRECT = 1;</code>
     */
    const SIGN_MODE_DIRECT = 1;
    /**
     * SIGN_MODE_TEXTUAL is a future signing mode that will verify some
     * human-readable textual representation on top of the binary representation
     * from SIGN_MODE_DIRECT
     *
     * Generated from protobuf enum <code>SIGN_MODE_TEXTUAL = 2;</code>
     */
    const SIGN_MODE_TEXTUAL = 2;
    /**
     * SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
     * Amino JSON and will be removed in the future
     *
     * Generated from protobuf enum <code>SIGN_MODE_LEGACY_AMINO_JSON = 127;</code>
     */
    const SIGN_MODE_LEGACY_AMINO_JSON = 127;

    private static $valueToName = [
        self::SIGN_MODE_UNSPECIFIED => 'SIGN_MODE_UNSPECIFIED',
        self::SIGN_MODE_DIRECT => 'SIGN_MODE_DIRECT',
        self::SIGN_MODE_TEXTUAL => 'SIGN_MODE_TEXTUAL',
        self::SIGN_MODE_LEGACY_AMINO_JSON => 'SIGN_MODE_LEGACY_AMINO_JSON',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

