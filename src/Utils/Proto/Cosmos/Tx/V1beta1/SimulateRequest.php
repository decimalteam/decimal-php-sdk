<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/v1beta1/service.proto

namespace Cosmos\Tx\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * SimulateRequest is the request type for the Service.Simulate
 * RPC method.
 *
 * Generated from protobuf message <code>cosmos.tx.v1beta1.SimulateRequest</code>
 */
class SimulateRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * tx is the transaction to simulate.
     * Deprecated. Send raw tx bytes instead.
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx", deprecated = true];</code>
     * @deprecated
     */
    protected $tx = null;
    /**
     * tx_bytes is the raw transaction.
     *
     * Generated from protobuf field <code>bytes tx_bytes = 2 [json_name = "txBytes"];</code>
     */
    protected $tx_bytes = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cosmos\Tx\V1beta1\Tx $tx
     *           tx is the transaction to simulate.
     *           Deprecated. Send raw tx bytes instead.
     *     @type string $tx_bytes
     *           tx_bytes is the raw transaction.
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Tx\V1beta1\GPBMetadata\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * tx is the transaction to simulate.
     * Deprecated. Send raw tx bytes instead.
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx", deprecated = true];</code>
     * @return \Cosmos\Tx\V1beta1\Tx|null
     * @deprecated
     */
    public function getTx()
    {
        @trigger_error('tx is deprecated.', E_USER_DEPRECATED);
        return $this->tx;
    }

    public function hasTx()
    {
        @trigger_error('tx is deprecated.', E_USER_DEPRECATED);
        return isset($this->tx);
    }

    public function clearTx()
    {
        @trigger_error('tx is deprecated.', E_USER_DEPRECATED);
        unset($this->tx);
    }

    /**
     * tx is the transaction to simulate.
     * Deprecated. Send raw tx bytes instead.
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx", deprecated = true];</code>
     * @param \Cosmos\Tx\V1beta1\Tx $var
     * @return $this
     * @deprecated
     */
    public function setTx($var)
    {
        @trigger_error('tx is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Cosmos\Tx\V1beta1\Tx::class);
        $this->tx = $var;

        return $this;
    }

    /**
     * tx_bytes is the raw transaction.
     *
     * Generated from protobuf field <code>bytes tx_bytes = 2 [json_name = "txBytes"];</code>
     * @return string
     */
    public function getTxBytes()
    {
        return $this->tx_bytes;
    }

    /**
     * tx_bytes is the raw transaction.
     *
     * Generated from protobuf field <code>bytes tx_bytes = 2 [json_name = "txBytes"];</code>
     * @param string $var
     * @return $this
     */
    public function setTxBytes($var)
    {
        GPBUtil::checkString($var, False);
        $this->tx_bytes = $var;

        return $this;
    }

}

