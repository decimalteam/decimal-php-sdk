<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/v1beta1/tx.proto

namespace Cosmos\Tx\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Fee includes the amount of coins paid in fees and the maximum
 * gas to be used by the transaction. The ratio yields an effective "gasprice",
 * which must be above some miminum to be accepted into the mempool.
 *
 * Generated from protobuf message <code>cosmos.tx.v1beta1.Fee</code>
 */
class Fee extends \Google\Protobuf\Internal\Message
{
    /**
     * amount is the amount of coins to be paid as a fee
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    private $amount;
    /**
     * gas_limit is the maximum gas that can be used in transaction processing
     * before an out of gas error occurs
     *
     * Generated from protobuf field <code>uint64 gas_limit = 2 [json_name = "gasLimit"];</code>
     */
    protected $gas_limit = 0;
    /**
     * if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
     * the payer must be a tx signer (and thus have signed this field in AuthInfo).
     * setting this field does *not* change the ordering of required signers for the transaction.
     *
     * Generated from protobuf field <code>string payer = 3 [json_name = "payer"];</code>
     */
    protected $payer = '';
    /**
     * if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
     * to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
     * not support fee grants, this will fail
     *
     * Generated from protobuf field <code>string granter = 4 [json_name = "granter"];</code>
     */
    protected $granter = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $amount
     *           amount is the amount of coins to be paid as a fee
     *     @type int|string $gas_limit
     *           gas_limit is the maximum gas that can be used in transaction processing
     *           before an out of gas error occurs
     *     @type string $payer
     *           if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
     *           the payer must be a tx signer (and thus have signed this field in AuthInfo).
     *           setting this field does *not* change the ordering of required signers for the transaction.
     *     @type string $granter
     *           if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
     *           to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
     *           not support fee grants, this will fail
     * }
     */
    public function __construct($data = NULL) {
        \Cosmos\Tx\V1beta1\GPBMetadata\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * amount is the amount of coins to be paid as a fee
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * amount is the amount of coins to be paid as a fee
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAmount($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Base\V1beta1\Coin::class);
        $this->amount = $arr;

        return $this;
    }

    /**
     * gas_limit is the maximum gas that can be used in transaction processing
     * before an out of gas error occurs
     *
     * Generated from protobuf field <code>uint64 gas_limit = 2 [json_name = "gasLimit"];</code>
     * @return int|string
     */
    public function getGasLimit()
    {
        return $this->gas_limit;
    }

    /**
     * gas_limit is the maximum gas that can be used in transaction processing
     * before an out of gas error occurs
     *
     * Generated from protobuf field <code>uint64 gas_limit = 2 [json_name = "gasLimit"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->gas_limit = $var;

        return $this;
    }

    /**
     * if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
     * the payer must be a tx signer (and thus have signed this field in AuthInfo).
     * setting this field does *not* change the ordering of required signers for the transaction.
     *
     * Generated from protobuf field <code>string payer = 3 [json_name = "payer"];</code>
     * @return string
     */
    public function getPayer()
    {
        return $this->payer;
    }

    /**
     * if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
     * the payer must be a tx signer (and thus have signed this field in AuthInfo).
     * setting this field does *not* change the ordering of required signers for the transaction.
     *
     * Generated from protobuf field <code>string payer = 3 [json_name = "payer"];</code>
     * @param string $var
     * @return $this
     */
    public function setPayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->payer = $var;

        return $this;
    }

    /**
     * if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
     * to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
     * not support fee grants, this will fail
     *
     * Generated from protobuf field <code>string granter = 4 [json_name = "granter"];</code>
     * @return string
     */
    public function getGranter()
    {
        return $this->granter;
    }

    /**
     * if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
     * to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
     * not support fee grants, this will fail
     *
     * Generated from protobuf field <code>string granter = 4 [json_name = "granter"];</code>
     * @param string $var
     * @return $this
     */
    public function setGranter($var)
    {
        GPBUtil::checkString($var, True);
        $this->granter = $var;

        return $this;
    }

}

