<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/v1beta1/tx.proto

namespace Cosmos\Tx\V1beta1\ModeInfo;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Single is the mode info for a single signer. It is structured as a message
 * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
 * future
 *
 * Generated from protobuf message <code>cosmos.tx.v1beta1.ModeInfo.Single</code>
 */
class Single extends \Google\Protobuf\Internal\Message
{
    /**
     * mode is the signing mode of the single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1 [json_name = "mode"];</code>
     */
    protected $mode = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $mode
     *           mode is the signing mode of the single signer
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Tx\V1Beta1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * mode is the signing mode of the single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1 [json_name = "mode"];</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * mode is the signing mode of the single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1 [json_name = "mode"];</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, \Cosmos\Tx\Signing\V1beta1\SignMode::class);
        $this->mode = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Single::class, \Cosmos\Tx\V1beta1\ModeInfo_Single::class);

