<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/v1beta1/tx.proto

namespace Cosmos\Tx\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ModeInfo describes the signing mode of a single or nested multisig signer.
 *
 * Generated from protobuf message <code>cosmos.tx.v1beta1.ModeInfo</code>
 */
class ModeInfo extends \Google\Protobuf\Internal\Message
{
    protected $sum;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cosmos\Tx\V1beta1\ModeInfo\Single $single
     *           single represents a single signer
     *     @type \Cosmos\Tx\V1beta1\ModeInfo\Multi $multi
     *           multi represents a nested multisig signer
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Tx\V1Beta1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * single represents a single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1 [json_name = "single"];</code>
     * @return \Cosmos\Tx\V1beta1\ModeInfo\Single|null
     */
    public function getSingle()
    {
        return $this->readOneof(1);
    }

    public function hasSingle()
    {
        return $this->hasOneof(1);
    }

    /**
     * single represents a single signer
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.ModeInfo.Single single = 1 [json_name = "single"];</code>
     * @param \Cosmos\Tx\V1beta1\ModeInfo\Single $var
     * @return $this
     */
    public function setSingle($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Tx\V1beta1\ModeInfo\Single::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * multi represents a nested multisig signer
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2 [json_name = "multi"];</code>
     * @return \Cosmos\Tx\V1beta1\ModeInfo\Multi|null
     */
    public function getMulti()
    {
        return $this->readOneof(2);
    }

    public function hasMulti()
    {
        return $this->hasOneof(2);
    }

    /**
     * multi represents a nested multisig signer
     *
     * Generated from protobuf field <code>.cosmos.tx.v1beta1.ModeInfo.Multi multi = 2 [json_name = "multi"];</code>
     * @param \Cosmos\Tx\V1beta1\ModeInfo\Multi $var
     * @return $this
     */
    public function setMulti($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Tx\V1beta1\ModeInfo\Multi::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getSum()
    {
        return $this->whichOneof("sum");
    }

}

