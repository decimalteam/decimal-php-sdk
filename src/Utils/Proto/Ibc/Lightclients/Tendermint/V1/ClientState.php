<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/lightclients/tendermint/v1/tendermint.proto

namespace Ibc\Lightclients\Tendermint\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ClientState from Tendermint tracks the current validator set, latest height,
 * and a possible frozen height.
 *
 * Generated from protobuf message <code>ibc.lightclients.tendermint.v1.ClientState</code>
 */
class ClientState extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string chain_id = 1 [json_name = "chainId"];</code>
     */
    protected $chain_id = '';
    /**
     * Generated from protobuf field <code>.ibc.lightclients.tendermint.v1.Fraction trust_level = 2 [json_name = "trustLevel", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"trust_level\""];</code>
     */
    protected $trust_level = null;
    /**
     * duration of the period since the LastestTimestamp during which the
     * submitted headers are valid for upgrade
     *
     * Generated from protobuf field <code>.google.protobuf.Duration trusting_period = 3 [json_name = "trustingPeriod", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"trusting_period\"", (.gogoproto.stdduration) = true];</code>
     */
    protected $trusting_period = null;
    /**
     * duration of the staking unbonding period
     *
     * Generated from protobuf field <code>.google.protobuf.Duration unbonding_period = 4 [json_name = "unbondingPeriod", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"unbonding_period\"", (.gogoproto.stdduration) = true];</code>
     */
    protected $unbonding_period = null;
    /**
     * defines how much new (untrusted) header's Time can drift into the future.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_clock_drift = 5 [json_name = "maxClockDrift", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"max_clock_drift\"", (.gogoproto.stdduration) = true];</code>
     */
    protected $max_clock_drift = null;
    /**
     * Block height when the client was frozen due to a misbehaviour
     *
     * Generated from protobuf field <code>.ibc.core.client.v1.Height frozen_height = 6 [json_name = "frozenHeight", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"frozen_height\""];</code>
     */
    protected $frozen_height = null;
    /**
     * Latest height the client was updated to
     *
     * Generated from protobuf field <code>.ibc.core.client.v1.Height latest_height = 7 [json_name = "latestHeight", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"latest_height\""];</code>
     */
    protected $latest_height = null;
    /**
     * Proof specifications used in verifying counterparty state
     *
     * Generated from protobuf field <code>repeated .ics23.ProofSpec proof_specs = 8 [json_name = "proofSpecs", (.gogoproto.moretags) = "yaml:\"proof_specs\""];</code>
     */
    private $proof_specs;
    /**
     * Path at which next upgraded client will be committed.
     * Each element corresponds to the key for a single CommitmentProof in the
     * chained proof. NOTE: ClientState must stored under
     * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
     * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
     * the default upgrade module, upgrade_path should be []string{"upgrade",
     * "upgradedIBCState"}`
     *
     * Generated from protobuf field <code>repeated string upgrade_path = 9 [json_name = "upgradePath", (.gogoproto.moretags) = "yaml:\"upgrade_path\""];</code>
     */
    private $upgrade_path;
    /**
     * allow_update_after_expiry is deprecated
     *
     * Generated from protobuf field <code>bool allow_update_after_expiry = 10 [json_name = "allowUpdateAfterExpiry", deprecated = true, (.gogoproto.moretags) = "yaml:\"allow_update_after_expiry\""];</code>
     * @deprecated
     */
    protected $allow_update_after_expiry = false;
    /**
     * allow_update_after_misbehaviour is deprecated
     *
     * Generated from protobuf field <code>bool allow_update_after_misbehaviour = 11 [json_name = "allowUpdateAfterMisbehaviour", deprecated = true, (.gogoproto.moretags) = "yaml:\"allow_update_after_misbehaviour\""];</code>
     * @deprecated
     */
    protected $allow_update_after_misbehaviour = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $chain_id
     *     @type \Ibc\Lightclients\Tendermint\V1\Fraction $trust_level
     *     @type \Google\Protobuf\Duration $trusting_period
     *           duration of the period since the LastestTimestamp during which the
     *           submitted headers are valid for upgrade
     *     @type \Google\Protobuf\Duration $unbonding_period
     *           duration of the staking unbonding period
     *     @type \Google\Protobuf\Duration $max_clock_drift
     *           defines how much new (untrusted) header's Time can drift into the future.
     *     @type \Ibc\Core\Client\V1\Height $frozen_height
     *           Block height when the client was frozen due to a misbehaviour
     *     @type \Ibc\Core\Client\V1\Height $latest_height
     *           Latest height the client was updated to
     *     @type \Ics23\ProofSpec[]|\Google\Protobuf\Internal\RepeatedField $proof_specs
     *           Proof specifications used in verifying counterparty state
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $upgrade_path
     *           Path at which next upgraded client will be committed.
     *           Each element corresponds to the key for a single CommitmentProof in the
     *           chained proof. NOTE: ClientState must stored under
     *           `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
     *           under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
     *           the default upgrade module, upgrade_path should be []string{"upgrade",
     *           "upgradedIBCState"}`
     *     @type bool $allow_update_after_expiry
     *           allow_update_after_expiry is deprecated
     *     @type bool $allow_update_after_misbehaviour
     *           allow_update_after_misbehaviour is deprecated
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ibc\Lightclients\Tendermint\V1\Tendermint::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @return string
     */
    public function getChainId()
    {
        return $this->chain_id;
    }

    /**
     * Generated from protobuf field <code>string chain_id = 1 [json_name = "chainId"];</code>
     * @param string $var
     * @return $this
     */
    public function setChainId($var)
    {
        GPBUtil::checkString($var, True);
        $this->chain_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.ibc.lightclients.tendermint.v1.Fraction trust_level = 2 [json_name = "trustLevel", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"trust_level\""];</code>
     * @return \Ibc\Lightclients\Tendermint\V1\Fraction|null
     */
    public function getTrustLevel()
    {
        return $this->trust_level;
    }

    public function hasTrustLevel()
    {
        return isset($this->trust_level);
    }

    public function clearTrustLevel()
    {
        unset($this->trust_level);
    }

    /**
     * Generated from protobuf field <code>.ibc.lightclients.tendermint.v1.Fraction trust_level = 2 [json_name = "trustLevel", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"trust_level\""];</code>
     * @param \Ibc\Lightclients\Tendermint\V1\Fraction $var
     * @return $this
     */
    public function setTrustLevel($var)
    {
        GPBUtil::checkMessage($var, \Ibc\Lightclients\Tendermint\V1\Fraction::class);
        $this->trust_level = $var;

        return $this;
    }

    /**
     * duration of the period since the LastestTimestamp during which the
     * submitted headers are valid for upgrade
     *
     * Generated from protobuf field <code>.google.protobuf.Duration trusting_period = 3 [json_name = "trustingPeriod", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"trusting_period\"", (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTrustingPeriod()
    {
        return $this->trusting_period;
    }

    public function hasTrustingPeriod()
    {
        return isset($this->trusting_period);
    }

    public function clearTrustingPeriod()
    {
        unset($this->trusting_period);
    }

    /**
     * duration of the period since the LastestTimestamp during which the
     * submitted headers are valid for upgrade
     *
     * Generated from protobuf field <code>.google.protobuf.Duration trusting_period = 3 [json_name = "trustingPeriod", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"trusting_period\"", (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTrustingPeriod($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->trusting_period = $var;

        return $this;
    }

    /**
     * duration of the staking unbonding period
     *
     * Generated from protobuf field <code>.google.protobuf.Duration unbonding_period = 4 [json_name = "unbondingPeriod", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"unbonding_period\"", (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getUnbondingPeriod()
    {
        return $this->unbonding_period;
    }

    public function hasUnbondingPeriod()
    {
        return isset($this->unbonding_period);
    }

    public function clearUnbondingPeriod()
    {
        unset($this->unbonding_period);
    }

    /**
     * duration of the staking unbonding period
     *
     * Generated from protobuf field <code>.google.protobuf.Duration unbonding_period = 4 [json_name = "unbondingPeriod", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"unbonding_period\"", (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setUnbondingPeriod($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->unbonding_period = $var;

        return $this;
    }

    /**
     * defines how much new (untrusted) header's Time can drift into the future.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_clock_drift = 5 [json_name = "maxClockDrift", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"max_clock_drift\"", (.gogoproto.stdduration) = true];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMaxClockDrift()
    {
        return $this->max_clock_drift;
    }

    public function hasMaxClockDrift()
    {
        return isset($this->max_clock_drift);
    }

    public function clearMaxClockDrift()
    {
        unset($this->max_clock_drift);
    }

    /**
     * defines how much new (untrusted) header's Time can drift into the future.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_clock_drift = 5 [json_name = "maxClockDrift", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"max_clock_drift\"", (.gogoproto.stdduration) = true];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaxClockDrift($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->max_clock_drift = $var;

        return $this;
    }

    /**
     * Block height when the client was frozen due to a misbehaviour
     *
     * Generated from protobuf field <code>.ibc.core.client.v1.Height frozen_height = 6 [json_name = "frozenHeight", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"frozen_height\""];</code>
     * @return \Ibc\Core\Client\V1\Height|null
     */
    public function getFrozenHeight()
    {
        return $this->frozen_height;
    }

    public function hasFrozenHeight()
    {
        return isset($this->frozen_height);
    }

    public function clearFrozenHeight()
    {
        unset($this->frozen_height);
    }

    /**
     * Block height when the client was frozen due to a misbehaviour
     *
     * Generated from protobuf field <code>.ibc.core.client.v1.Height frozen_height = 6 [json_name = "frozenHeight", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"frozen_height\""];</code>
     * @param \Ibc\Core\Client\V1\Height $var
     * @return $this
     */
    public function setFrozenHeight($var)
    {
        GPBUtil::checkMessage($var, \Ibc\Core\Client\V1\Height::class);
        $this->frozen_height = $var;

        return $this;
    }

    /**
     * Latest height the client was updated to
     *
     * Generated from protobuf field <code>.ibc.core.client.v1.Height latest_height = 7 [json_name = "latestHeight", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"latest_height\""];</code>
     * @return \Ibc\Core\Client\V1\Height|null
     */
    public function getLatestHeight()
    {
        return $this->latest_height;
    }

    public function hasLatestHeight()
    {
        return isset($this->latest_height);
    }

    public function clearLatestHeight()
    {
        unset($this->latest_height);
    }

    /**
     * Latest height the client was updated to
     *
     * Generated from protobuf field <code>.ibc.core.client.v1.Height latest_height = 7 [json_name = "latestHeight", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"latest_height\""];</code>
     * @param \Ibc\Core\Client\V1\Height $var
     * @return $this
     */
    public function setLatestHeight($var)
    {
        GPBUtil::checkMessage($var, \Ibc\Core\Client\V1\Height::class);
        $this->latest_height = $var;

        return $this;
    }

    /**
     * Proof specifications used in verifying counterparty state
     *
     * Generated from protobuf field <code>repeated .ics23.ProofSpec proof_specs = 8 [json_name = "proofSpecs", (.gogoproto.moretags) = "yaml:\"proof_specs\""];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProofSpecs()
    {
        return $this->proof_specs;
    }

    /**
     * Proof specifications used in verifying counterparty state
     *
     * Generated from protobuf field <code>repeated .ics23.ProofSpec proof_specs = 8 [json_name = "proofSpecs", (.gogoproto.moretags) = "yaml:\"proof_specs\""];</code>
     * @param \Ics23\ProofSpec[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProofSpecs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Ics23\ProofSpec::class);
        $this->proof_specs = $arr;

        return $this;
    }

    /**
     * Path at which next upgraded client will be committed.
     * Each element corresponds to the key for a single CommitmentProof in the
     * chained proof. NOTE: ClientState must stored under
     * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
     * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
     * the default upgrade module, upgrade_path should be []string{"upgrade",
     * "upgradedIBCState"}`
     *
     * Generated from protobuf field <code>repeated string upgrade_path = 9 [json_name = "upgradePath", (.gogoproto.moretags) = "yaml:\"upgrade_path\""];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUpgradePath()
    {
        return $this->upgrade_path;
    }

    /**
     * Path at which next upgraded client will be committed.
     * Each element corresponds to the key for a single CommitmentProof in the
     * chained proof. NOTE: ClientState must stored under
     * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
     * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
     * the default upgrade module, upgrade_path should be []string{"upgrade",
     * "upgradedIBCState"}`
     *
     * Generated from protobuf field <code>repeated string upgrade_path = 9 [json_name = "upgradePath", (.gogoproto.moretags) = "yaml:\"upgrade_path\""];</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUpgradePath($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->upgrade_path = $arr;

        return $this;
    }

    /**
     * allow_update_after_expiry is deprecated
     *
     * Generated from protobuf field <code>bool allow_update_after_expiry = 10 [json_name = "allowUpdateAfterExpiry", deprecated = true, (.gogoproto.moretags) = "yaml:\"allow_update_after_expiry\""];</code>
     * @return bool
     * @deprecated
     */
    public function getAllowUpdateAfterExpiry()
    {
        @trigger_error('allow_update_after_expiry is deprecated.', E_USER_DEPRECATED);
        return $this->allow_update_after_expiry;
    }

    /**
     * allow_update_after_expiry is deprecated
     *
     * Generated from protobuf field <code>bool allow_update_after_expiry = 10 [json_name = "allowUpdateAfterExpiry", deprecated = true, (.gogoproto.moretags) = "yaml:\"allow_update_after_expiry\""];</code>
     * @param bool $var
     * @return $this
     * @deprecated
     */
    public function setAllowUpdateAfterExpiry($var)
    {
        @trigger_error('allow_update_after_expiry is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkBool($var);
        $this->allow_update_after_expiry = $var;

        return $this;
    }

    /**
     * allow_update_after_misbehaviour is deprecated
     *
     * Generated from protobuf field <code>bool allow_update_after_misbehaviour = 11 [json_name = "allowUpdateAfterMisbehaviour", deprecated = true, (.gogoproto.moretags) = "yaml:\"allow_update_after_misbehaviour\""];</code>
     * @return bool
     * @deprecated
     */
    public function getAllowUpdateAfterMisbehaviour()
    {
        @trigger_error('allow_update_after_misbehaviour is deprecated.', E_USER_DEPRECATED);
        return $this->allow_update_after_misbehaviour;
    }

    /**
     * allow_update_after_misbehaviour is deprecated
     *
     * Generated from protobuf field <code>bool allow_update_after_misbehaviour = 11 [json_name = "allowUpdateAfterMisbehaviour", deprecated = true, (.gogoproto.moretags) = "yaml:\"allow_update_after_misbehaviour\""];</code>
     * @param bool $var
     * @return $this
     * @deprecated
     */
    public function setAllowUpdateAfterMisbehaviour($var)
    {
        @trigger_error('allow_update_after_misbehaviour is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkBool($var);
        $this->allow_update_after_misbehaviour = $var;

        return $this;
    }

}

