<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/lightclients/solomachine/v2/solomachine.proto

namespace Ibc\Lightclients\Solomachine\V2;

use UnexpectedValueException;

/**
 * DataType defines the type of solo machine proof being created. This is done
 * to preserve uniqueness of different data sign byte encodings.
 *
 * Protobuf type <code>ibc.lightclients.solomachine.v2.DataType</code>
 */
class DataType
{
    /**
     * Default State
     *
     * Generated from protobuf enum <code>DATA_TYPE_UNINITIALIZED_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "UNSPECIFIED"];</code>
     */
    const DATA_TYPE_UNINITIALIZED_UNSPECIFIED = 0;
    /**
     * Data type for client state verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_CLIENT_STATE = 1 [(.gogoproto.enumvalue_customname) = "CLIENT"];</code>
     */
    const DATA_TYPE_CLIENT_STATE = 1;
    /**
     * Data type for consensus state verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_CONSENSUS_STATE = 2 [(.gogoproto.enumvalue_customname) = "CONSENSUS"];</code>
     */
    const DATA_TYPE_CONSENSUS_STATE = 2;
    /**
     * Data type for connection state verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_CONNECTION_STATE = 3 [(.gogoproto.enumvalue_customname) = "CONNECTION"];</code>
     */
    const DATA_TYPE_CONNECTION_STATE = 3;
    /**
     * Data type for channel state verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_CHANNEL_STATE = 4 [(.gogoproto.enumvalue_customname) = "CHANNEL"];</code>
     */
    const DATA_TYPE_CHANNEL_STATE = 4;
    /**
     * Data type for packet commitment verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_PACKET_COMMITMENT = 5 [(.gogoproto.enumvalue_customname) = "PACKETCOMMITMENT"];</code>
     */
    const DATA_TYPE_PACKET_COMMITMENT = 5;
    /**
     * Data type for packet acknowledgement verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_PACKET_ACKNOWLEDGEMENT = 6 [(.gogoproto.enumvalue_customname) = "PACKETACKNOWLEDGEMENT"];</code>
     */
    const DATA_TYPE_PACKET_ACKNOWLEDGEMENT = 6;
    /**
     * Data type for packet receipt absence verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_PACKET_RECEIPT_ABSENCE = 7 [(.gogoproto.enumvalue_customname) = "PACKETRECEIPTABSENCE"];</code>
     */
    const DATA_TYPE_PACKET_RECEIPT_ABSENCE = 7;
    /**
     * Data type for next sequence recv verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_NEXT_SEQUENCE_RECV = 8 [(.gogoproto.enumvalue_customname) = "NEXTSEQUENCERECV"];</code>
     */
    const DATA_TYPE_NEXT_SEQUENCE_RECV = 8;
    /**
     * Data type for header verification
     *
     * Generated from protobuf enum <code>DATA_TYPE_HEADER = 9 [(.gogoproto.enumvalue_customname) = "HEADER"];</code>
     */
    const DATA_TYPE_HEADER = 9;

    private static $valueToName = [
        self::DATA_TYPE_UNINITIALIZED_UNSPECIFIED => 'DATA_TYPE_UNINITIALIZED_UNSPECIFIED',
        self::DATA_TYPE_CLIENT_STATE => 'DATA_TYPE_CLIENT_STATE',
        self::DATA_TYPE_CONSENSUS_STATE => 'DATA_TYPE_CONSENSUS_STATE',
        self::DATA_TYPE_CONNECTION_STATE => 'DATA_TYPE_CONNECTION_STATE',
        self::DATA_TYPE_CHANNEL_STATE => 'DATA_TYPE_CHANNEL_STATE',
        self::DATA_TYPE_PACKET_COMMITMENT => 'DATA_TYPE_PACKET_COMMITMENT',
        self::DATA_TYPE_PACKET_ACKNOWLEDGEMENT => 'DATA_TYPE_PACKET_ACKNOWLEDGEMENT',
        self::DATA_TYPE_PACKET_RECEIPT_ABSENCE => 'DATA_TYPE_PACKET_RECEIPT_ABSENCE',
        self::DATA_TYPE_NEXT_SEQUENCE_RECV => 'DATA_TYPE_NEXT_SEQUENCE_RECV',
        self::DATA_TYPE_HEADER => 'DATA_TYPE_HEADER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

