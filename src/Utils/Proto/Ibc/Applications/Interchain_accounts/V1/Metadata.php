<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/applications/interchain_accounts/v1/metadata.proto

namespace Ibc\Applications\Interchain_accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Metadata defines a set of protocol specific data encoded into the ICS27 channel version bytestring
 * See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
 *
 * Generated from protobuf message <code>ibc.applications.interchain_accounts.v1.Metadata</code>
 */
class Metadata extends \Google\Protobuf\Internal\Message
{
    /**
     * version defines the ICS27 protocol version
     *
     * Generated from protobuf field <code>string version = 1 [json_name = "version"];</code>
     */
    protected $version = '';
    /**
     * controller_connection_id is the connection identifier associated with the controller chain
     *
     * Generated from protobuf field <code>string controller_connection_id = 2 [json_name = "controllerConnectionId", (.gogoproto.moretags) = "yaml:\"controller_connection_id\""];</code>
     */
    protected $controller_connection_id = '';
    /**
     * host_connection_id is the connection identifier associated with the host chain
     *
     * Generated from protobuf field <code>string host_connection_id = 3 [json_name = "hostConnectionId", (.gogoproto.moretags) = "yaml:\"host_connection_id\""];</code>
     */
    protected $host_connection_id = '';
    /**
     * address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
     * NOTE: the address field is empty on the OnChanOpenInit handshake step
     *
     * Generated from protobuf field <code>string address = 4 [json_name = "address"];</code>
     */
    protected $address = '';
    /**
     * encoding defines the supported codec format
     *
     * Generated from protobuf field <code>string encoding = 5 [json_name = "encoding"];</code>
     */
    protected $encoding = '';
    /**
     * tx_type defines the type of transactions the interchain account can execute
     *
     * Generated from protobuf field <code>string tx_type = 6 [json_name = "txType"];</code>
     */
    protected $tx_type = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $version
     *           version defines the ICS27 protocol version
     *     @type string $controller_connection_id
     *           controller_connection_id is the connection identifier associated with the controller chain
     *     @type string $host_connection_id
     *           host_connection_id is the connection identifier associated with the host chain
     *     @type string $address
     *           address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
     *           NOTE: the address field is empty on the OnChanOpenInit handshake step
     *     @type string $encoding
     *           encoding defines the supported codec format
     *     @type string $tx_type
     *           tx_type defines the type of transactions the interchain account can execute
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ibc\Applications\InterchainAccounts\V1\Metadata::initOnce();
        parent::__construct($data);
    }

    /**
     * version defines the ICS27 protocol version
     *
     * Generated from protobuf field <code>string version = 1 [json_name = "version"];</code>
     * @return string
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * version defines the ICS27 protocol version
     *
     * Generated from protobuf field <code>string version = 1 [json_name = "version"];</code>
     * @param string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;

        return $this;
    }

    /**
     * controller_connection_id is the connection identifier associated with the controller chain
     *
     * Generated from protobuf field <code>string controller_connection_id = 2 [json_name = "controllerConnectionId", (.gogoproto.moretags) = "yaml:\"controller_connection_id\""];</code>
     * @return string
     */
    public function getControllerConnectionId()
    {
        return $this->controller_connection_id;
    }

    /**
     * controller_connection_id is the connection identifier associated with the controller chain
     *
     * Generated from protobuf field <code>string controller_connection_id = 2 [json_name = "controllerConnectionId", (.gogoproto.moretags) = "yaml:\"controller_connection_id\""];</code>
     * @param string $var
     * @return $this
     */
    public function setControllerConnectionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->controller_connection_id = $var;

        return $this;
    }

    /**
     * host_connection_id is the connection identifier associated with the host chain
     *
     * Generated from protobuf field <code>string host_connection_id = 3 [json_name = "hostConnectionId", (.gogoproto.moretags) = "yaml:\"host_connection_id\""];</code>
     * @return string
     */
    public function getHostConnectionId()
    {
        return $this->host_connection_id;
    }

    /**
     * host_connection_id is the connection identifier associated with the host chain
     *
     * Generated from protobuf field <code>string host_connection_id = 3 [json_name = "hostConnectionId", (.gogoproto.moretags) = "yaml:\"host_connection_id\""];</code>
     * @param string $var
     * @return $this
     */
    public function setHostConnectionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->host_connection_id = $var;

        return $this;
    }

    /**
     * address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
     * NOTE: the address field is empty on the OnChanOpenInit handshake step
     *
     * Generated from protobuf field <code>string address = 4 [json_name = "address"];</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
     * NOTE: the address field is empty on the OnChanOpenInit handshake step
     *
     * Generated from protobuf field <code>string address = 4 [json_name = "address"];</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * encoding defines the supported codec format
     *
     * Generated from protobuf field <code>string encoding = 5 [json_name = "encoding"];</code>
     * @return string
     */
    public function getEncoding()
    {
        return $this->encoding;
    }

    /**
     * encoding defines the supported codec format
     *
     * Generated from protobuf field <code>string encoding = 5 [json_name = "encoding"];</code>
     * @param string $var
     * @return $this
     */
    public function setEncoding($var)
    {
        GPBUtil::checkString($var, True);
        $this->encoding = $var;

        return $this;
    }

    /**
     * tx_type defines the type of transactions the interchain account can execute
     *
     * Generated from protobuf field <code>string tx_type = 6 [json_name = "txType"];</code>
     * @return string
     */
    public function getTxType()
    {
        return $this->tx_type;
    }

    /**
     * tx_type defines the type of transactions the interchain account can execute
     *
     * Generated from protobuf field <code>string tx_type = 6 [json_name = "txType"];</code>
     * @param string $var
     * @return $this
     */
    public function setTxType($var)
    {
        GPBUtil::checkString($var, True);
        $this->tx_type = $var;

        return $this;
    }

}

