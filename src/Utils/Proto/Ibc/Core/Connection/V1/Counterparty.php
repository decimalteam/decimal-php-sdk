<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/core/connection/v1/connection.proto

namespace Ibc\Core\Connection\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Counterparty defines the counterparty chain associated with a connection end.
 *
 * Generated from protobuf message <code>ibc.core.connection.v1.Counterparty</code>
 */
class Counterparty extends \Google\Protobuf\Internal\Message
{
    /**
     * identifies the client on the counterparty chain associated with a given
     * connection.
     *
     * Generated from protobuf field <code>string client_id = 1 [json_name = "clientId", (.gogoproto.moretags) = "yaml:\"client_id\""];</code>
     */
    protected $client_id = '';
    /**
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     *
     * Generated from protobuf field <code>string connection_id = 2 [json_name = "connectionId", (.gogoproto.moretags) = "yaml:\"connection_id\""];</code>
     */
    protected $connection_id = '';
    /**
     * commitment merkle prefix of the counterparty chain.
     *
     * Generated from protobuf field <code>.ibc.core.commitment.v1.MerklePrefix prefix = 3 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     */
    protected $prefix = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $client_id
     *           identifies the client on the counterparty chain associated with a given
     *           connection.
     *     @type string $connection_id
     *           identifies the connection end on the counterparty chain associated with a
     *           given connection.
     *     @type \Ibc\Core\Commitment\V1\MerklePrefix $prefix
     *           commitment merkle prefix of the counterparty chain.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ibc\Core\Connection\V1\Connection::initOnce();
        parent::__construct($data);
    }

    /**
     * identifies the client on the counterparty chain associated with a given
     * connection.
     *
     * Generated from protobuf field <code>string client_id = 1 [json_name = "clientId", (.gogoproto.moretags) = "yaml:\"client_id\""];</code>
     * @return string
     */
    public function getClientId()
    {
        return $this->client_id;
    }

    /**
     * identifies the client on the counterparty chain associated with a given
     * connection.
     *
     * Generated from protobuf field <code>string client_id = 1 [json_name = "clientId", (.gogoproto.moretags) = "yaml:\"client_id\""];</code>
     * @param string $var
     * @return $this
     */
    public function setClientId($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_id = $var;

        return $this;
    }

    /**
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     *
     * Generated from protobuf field <code>string connection_id = 2 [json_name = "connectionId", (.gogoproto.moretags) = "yaml:\"connection_id\""];</code>
     * @return string
     */
    public function getConnectionId()
    {
        return $this->connection_id;
    }

    /**
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     *
     * Generated from protobuf field <code>string connection_id = 2 [json_name = "connectionId", (.gogoproto.moretags) = "yaml:\"connection_id\""];</code>
     * @param string $var
     * @return $this
     */
    public function setConnectionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->connection_id = $var;

        return $this;
    }

    /**
     * commitment merkle prefix of the counterparty chain.
     *
     * Generated from protobuf field <code>.ibc.core.commitment.v1.MerklePrefix prefix = 3 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     * @return \Ibc\Core\Commitment\V1\MerklePrefix|null
     */
    public function getPrefix()
    {
        return $this->prefix;
    }

    public function hasPrefix()
    {
        return isset($this->prefix);
    }

    public function clearPrefix()
    {
        unset($this->prefix);
    }

    /**
     * commitment merkle prefix of the counterparty chain.
     *
     * Generated from protobuf field <code>.ibc.core.commitment.v1.MerklePrefix prefix = 3 [json_name = "prefix", (.gogoproto.nullable) = false];</code>
     * @param \Ibc\Core\Commitment\V1\MerklePrefix $var
     * @return $this
     */
    public function setPrefix($var)
    {
        GPBUtil::checkMessage($var, \Ibc\Core\Commitment\V1\MerklePrefix::class);
        $this->prefix = $var;

        return $this;
    }

}

