<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/core/channel/v1/channel.proto

namespace Ibc\Core\Channel\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Acknowledgement is the recommended acknowledgement format to be used by
 * app-specific protocols.
 * NOTE: The field numbers 21 and 22 were explicitly chosen to avoid accidental
 * conflicts with other protobuf message formats used for acknowledgements.
 * The first byte of any message with this format will be the non-ASCII values
 * `0xaa` (result) or `0xb2` (error). Implemented as defined by ICS:
 * https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#acknowledgement-envelope
 *
 * Generated from protobuf message <code>ibc.core.channel.v1.Acknowledgement</code>
 */
class Acknowledgement extends \Google\Protobuf\Internal\Message
{
    protected $response;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $result
     *     @type string $error
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ibc\Core\Channel\V1\Channel::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes result = 21 [json_name = "result"];</code>
     * @return string
     */
    public function getResult()
    {
        return $this->readOneof(21);
    }

    public function hasResult()
    {
        return $this->hasOneof(21);
    }

    /**
     * Generated from protobuf field <code>bytes result = 21 [json_name = "result"];</code>
     * @param string $var
     * @return $this
     */
    public function setResult($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(21, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string error = 22 [json_name = "error"];</code>
     * @return string
     */
    public function getError()
    {
        return $this->readOneof(22);
    }

    public function hasError()
    {
        return $this->hasOneof(22);
    }

    /**
     * Generated from protobuf field <code>string error = 22 [json_name = "error"];</code>
     * @param string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(22, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResponse()
    {
        return $this->whichOneof("response");
    }

}

